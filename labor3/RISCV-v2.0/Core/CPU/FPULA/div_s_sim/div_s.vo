//IP Functional Simulation Model
//VERSION_BEGIN 18.1 cbx_mgl 2018:09:12:13:10:36:SJ cbx_simgen 2018:09:12:13:04:24:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// You may only use these simulation model output files for simulation
// purposes and expressly not for synthesis or any other purposes (in which
// event Intel disclaims all warranties of any kind).


//synopsys translate_off

//synthesis_resources = altera_syncram 6 lut 446 mux21 54 oper_add 11 oper_mult 3 oper_mux 33 
`timescale 1 ps / 1 ps
module  div_s
	( 
	a,
	areset,
	b,
	clk,
	q) /* synthesis synthesis_clearbox=1 */;
	input   [31:0]  a;
	input   areset;
	input   [31:0]  b;
	input   clk;
	output   [31:0]  q;

	wire  [22:0]   wire_nl1OOl_q_b;
	wire  [11:0]   wire_nli1lO_q_a;
	wire  [19:0]   wire_nlilOl_q_a;
	wire  [10:0]   wire_nlli1i_q_a;
	wire  [19:0]   wire_nlli1l_q_a;
	wire  [8:0]   wire_nllill_q_b;
	reg	n0i;
	reg	n0O;
	reg	n0lOO;
	reg	n0O1l;
	reg	n0l1O;
	reg	n1l;
	reg	n001i;
	reg	n00i;
	reg	n00l;
	reg	n00O;
	reg	n010i;
	reg	n010l;
	reg	n01i;
	reg	n01l;
	reg	n01O;
	reg	n0ii;
	reg	n0il;
	reg	n0iO;
	reg	n0l0i;
	reg	n0l0l;
	reg	n0l0O;
	reg	n0l1l;
	reg	n0li;
	reg	n0lii;
	reg	n0lil;
	reg	n0liO;
	reg	n0ll;
	reg	n0lli;
	reg	n0lll;
	reg	n0llO;
	reg	n0lO;
	reg	n0lOi;
	reg	n0O0i;
	reg	n0O1O;
	reg	n0Oi;
	reg	n0Oil;
	reg	n0Ol;
	reg	n0OO;
	reg	n10i;
	reg	n10l;
	reg	n10O;
	reg	n11i;
	reg	n11l;
	reg	n11O;
	reg	n1ii;
	reg	n1il;
	reg	n1ll;
	reg	n1lO;
	reg	n1O;
	reg	n1Oi;
	reg	n1Ol;
	reg	n1OO;
	reg	ni;
	reg	ni0i;
	reg	ni0ii;
	reg	ni0il;
	reg	ni0iO;
	reg	ni0l;
	reg	ni0li;
	reg	ni0ll;
	reg	ni0lO;
	reg	ni0O;
	reg	ni0Oi;
	reg	ni0Ol;
	reg	ni0OO;
	reg	ni1i;
	reg	ni1l;
	reg	ni1O;
	reg	nii;
	reg	nii0i;
	reg	nii0l;
	reg	nii0O;
	reg	nii1i;
	reg	nii1l;
	reg	nii1O;
	reg	niii;
	reg	niiii;
	reg	niiil;
	reg	niiiO;
	reg	niil;
	reg	niili;
	reg	niill;
	reg	niilO;
	reg	niiO;
	reg	niiOi;
	reg	niiOl;
	reg	niiOO;
	reg	nil;
	reg	nil0i;
	reg	nil0l;
	reg	nil0O;
	reg	nil1i;
	reg	nil1l;
	reg	nil1O;
	reg	nili;
	reg	nilii;
	reg	nilil;
	reg	niliO;
	reg	nill;
	reg	nilli;
	reg	nilll;
	reg	nillO;
	reg	nilO;
	reg	nilOi;
	reg	nilOl;
	reg	nilOO;
	reg	niO0i;
	reg	niO0l;
	reg	niO0O;
	reg	niO1i;
	reg	niO1l;
	reg	niO1O;
	reg	niOi;
	reg	niOii;
	reg	niOil;
	reg	niOiO;
	reg	niOl;
	reg	niOli;
	reg	niOll;
	reg	niOlO;
	reg	niOO;
	reg	niOOi;
	reg	niOOl;
	reg	niOOO;
	reg	nl000i;
	reg	nl000l;
	reg	nl000O;
	reg	nl001i;
	reg	nl001l;
	reg	nl001O;
	reg	nl00i;
	reg	nl00ii;
	reg	nl00il;
	reg	nl00iO;
	reg	nl00l;
	reg	nl00li;
	reg	nl00ll;
	reg	nl00lO;
	reg	nl00O;
	reg	nl00Oi;
	reg	nl00Ol;
	reg	nl00OO;
	reg	nl010i;
	reg	nl010l;
	reg	nl010O;
	reg	nl011i;
	reg	nl011l;
	reg	nl011O;
	reg	nl01i;
	reg	nl01ii;
	reg	nl01il;
	reg	nl01iO;
	reg	nl01l;
	reg	nl01li;
	reg	nl01ll;
	reg	nl01lO;
	reg	nl01O;
	reg	nl01Oi;
	reg	nl01Ol;
	reg	nl01OO;
	reg	nl0i0i;
	reg	nl0i0l;
	reg	nl0i0O;
	reg	nl0i1i;
	reg	nl0i1l;
	reg	nl0i1O;
	reg	nl0ii;
	reg	nl0iii;
	reg	nl0iil;
	reg	nl0iiO;
	reg	nl0ili;
	reg	nl0ill;
	reg	nl0ilO;
	reg	nl0iOi;
	reg	nl0iOl;
	reg	nl0iOO;
	reg	nl0l0i;
	reg	nl0l0l;
	reg	nl0l0O;
	reg	nl0l1i;
	reg	nl0l1l;
	reg	nl0l1O;
	reg	nl0li;
	reg	nl0lii;
	reg	nl0lil;
	reg	nl0liO;
	reg	nl0ll;
	reg	nl0lli;
	reg	nl0lll;
	reg	nl0llO;
	reg	nl0lO;
	reg	nl0lOi;
	reg	nl0lOl;
	reg	nl0lOO;
	reg	nl0O0i;
	reg	nl0O0l;
	reg	nl0O0O;
	reg	nl0O1i;
	reg	nl0O1l;
	reg	nl0O1O;
	reg	nl0Oi;
	reg	nl0Oii;
	reg	nl0Oil;
	reg	nl0OiO;
	reg	nl0Ol;
	reg	nl0Oli;
	reg	nl0Oll;
	reg	nl0OlO;
	reg	nl0OO;
	reg	nl0OOi;
	reg	nl0OOl;
	reg	nl0OOO;
	reg	nl10i;
	reg	nl10l;
	reg	nl10O;
	reg	nl11i;
	reg	nl11l;
	reg	nl11O;
	reg	nl1i;
	reg	nl1ii;
	reg	nl1il;
	reg	nl1iO;
	reg	nl1l;
	reg	nl1li;
	reg	nl1ll;
	reg	nl1lll;
	reg	nl1llO;
	reg	nl1lO;
	reg	nl1lOi;
	reg	nl1lOl;
	reg	nl1lOO;
	reg	nl1O;
	reg	nl1O0i;
	reg	nl1O0l;
	reg	nl1O0O;
	reg	nl1O1i;
	reg	nl1O1l;
	reg	nl1O1O;
	reg	nl1Oi;
	reg	nl1Oii;
	reg	nl1Oil;
	reg	nl1OiO;
	reg	nl1Ol;
	reg	nl1Oli;
	reg	nl1Oll;
	reg	nl1OlO;
	reg	nl1OO;
	reg	nl1OOi;
	reg	nl1OOO;
	reg	nli00i;
	reg	nli00l;
	reg	nli00O;
	reg	nli01i;
	reg	nli01l;
	reg	nli01O;
	reg	nli0i;
	reg	nli0ii;
	reg	nli0il;
	reg	nli0iO;
	reg	nli0l;
	reg	nli0li;
	reg	nli0ll;
	reg	nli0lO;
	reg	nli0O;
	reg	nli0Oi;
	reg	nli0Ol;
	reg	nli0OO;
	reg	nli10i;
	reg	nli10l;
	reg	nli10O;
	reg	nli11i;
	reg	nli11l;
	reg	nli11O;
	reg	nli1i;
	reg	nli1ii;
	reg	nli1il;
	reg	nli1iO;
	reg	nli1l;
	reg	nli1li;
	reg	nli1ll;
	reg	nli1O;
	reg	nli1Oi;
	reg	nli1Ol;
	reg	nli1OO;
	reg	nlii0i;
	reg	nlii0l;
	reg	nlii0O;
	reg	nlii1i;
	reg	nlii1l;
	reg	nlii1O;
	reg	nliii;
	reg	nliiii;
	reg	nliiil;
	reg	nliiiO;
	reg	nliil;
	reg	nliili;
	reg	nliill;
	reg	nliilO;
	reg	nliiO;
	reg	nliiOi;
	reg	nliiOl;
	reg	nliiOO;
	reg	nlil0i;
	reg	nlil0l;
	reg	nlil0O;
	reg	nlil1i;
	reg	nlil1l;
	reg	nlil1O;
	reg	nlili;
	reg	nlilii;
	reg	nlilil;
	reg	nliliO;
	reg	nlill;
	reg	nlilli;
	reg	nlilll;
	reg	nlillO;
	reg	nlilO;
	reg	nlilOi;
	reg	nlilOO;
	reg	nliO0i;
	reg	nliO0l;
	reg	nliO0O;
	reg	nliO1i;
	reg	nliO1l;
	reg	nliO1O;
	reg	nliOi;
	reg	nliOii;
	reg	nliOil;
	reg	nliOiO;
	reg	nliOl;
	reg	nliOli;
	reg	nliOll;
	reg	nliOlO;
	reg	nliOO;
	reg	nliOOi;
	reg	nliOOl;
	reg	nliOOO;
	reg	nll00i;
	reg	nll00l;
	reg	nll00O;
	reg	nll01i;
	reg	nll01l;
	reg	nll01O;
	reg	nll0i;
	reg	nll0ii;
	reg	nll0il;
	reg	nll0iO;
	reg	nll0l;
	reg	nll0li;
	reg	nll0ll;
	reg	nll0lO;
	reg	nll0O;
	reg	nll0Oi;
	reg	nll0Ol;
	reg	nll0OO;
	reg	nll10i;
	reg	nll10l;
	reg	nll10O;
	reg	nll11i;
	reg	nll11l;
	reg	nll11O;
	reg	nll1i;
	reg	nll1ii;
	reg	nll1il;
	reg	nll1iO;
	reg	nll1l;
	reg	nll1li;
	reg	nll1ll;
	reg	nll1lO;
	reg	nll1O;
	reg	nll1Oi;
	reg	nll1Ol;
	reg	nll1OO;
	reg	nlli0i;
	reg	nlli0l;
	reg	nlli0O;
	reg	nlli1O;
	reg	nllii;
	reg	nlliii;
	reg	nlliil;
	reg	nlliiO;
	reg	nllil;
	reg	nllili;
	reg	nllilO;
	reg	nlliO;
	reg	nlliOi;
	reg	nlliOl;
	reg	nlliOO;
	reg	nlll0i;
	reg	nlll0l;
	reg	nlll0O;
	reg	nlll1i;
	reg	nlll1l;
	reg	nlll1O;
	reg	nllli;
	reg	nlllii;
	reg	nlllil;
	reg	nllliO;
	reg	nllll;
	reg	nlllli;
	reg	nlllll;
	reg	nllllO;
	reg	nlllO;
	reg	nlllOi;
	reg	nlllOl;
	reg	nlllOO;
	reg	nllO0i;
	reg	nllO0l;
	reg	nllO0O;
	reg	nllO1i;
	reg	nllO1l;
	reg	nllO1O;
	reg	nllOi;
	reg	nllOii;
	reg	nllOil;
	reg	nllOiO;
	reg	nllOl;
	reg	nllOli;
	reg	nllOll;
	reg	nllOlO;
	reg	nllOO;
	reg	nllOOi;
	reg	nllOOl;
	reg	nllOOO;
	reg	nlO0i;
	reg	nlO0l;
	reg	nlO0O;
	reg	nlO10i;
	reg	nlO10l;
	reg	nlO10O;
	reg	nlO11i;
	reg	nlO11l;
	reg	nlO11O;
	reg	nlO1i;
	reg	nlO1l;
	reg	nlO1O;
	reg	nlOii;
	reg	nlOil;
	reg	nlOiO;
	reg	nlOli;
	reg	nlOll;
	reg	nlOlO;
	reg	nlOO;
	reg	nlOOi;
	reg	nlOOl;
	reg	nlOOO;
	wire	wire_n00ii_dataout;
	wire	wire_n00il_dataout;
	wire	wire_n00iO_dataout;
	wire	wire_n00li_dataout;
	wire	wire_n00ll_dataout;
	wire	wire_n00lO_dataout;
	wire	wire_n00Oi_dataout;
	wire	wire_n00Ol_dataout;
	wire	wire_n00OO_dataout;
	wire	wire_n0i0i_dataout;
	wire	wire_n0i0l_dataout;
	wire	wire_n0i0O_dataout;
	wire	wire_n0i1i_dataout;
	wire	wire_n0i1l_dataout;
	wire	wire_n0i1O_dataout;
	wire	wire_n0iii_dataout;
	wire	wire_n0iil_dataout;
	wire	wire_n0iiO_dataout;
	wire	wire_n0ili_dataout;
	wire	wire_n0ill_dataout;
	wire	wire_n0ilO_dataout;
	wire	wire_n0iOi_dataout;
	wire	wire_n0iOl_dataout;
	wire	wire_n0iOO_dataout;
	wire	wire_n0O0l_dataout;
	wire	wire_n0OiO_dataout;
	wire	wire_n0Oli_dataout;
	wire	wire_n0Oll_dataout;
	wire	wire_n0OlO_dataout;
	wire	wire_n0OOi_dataout;
	wire	wire_n0OOl_dataout;
	wire	wire_n0OOO_dataout;
	wire	wire_ni00i_dataout;
	wire	wire_ni00l_dataout;
	wire	wire_ni01i_dataout;
	wire	wire_ni01l_dataout;
	wire	wire_ni01O_dataout;
	wire	wire_ni10i_dataout;
	wire	wire_ni10l_dataout;
	wire	wire_ni10O_dataout;
	wire	wire_ni11i_dataout;
	wire	wire_ni11l_dataout;
	wire	wire_ni11O_dataout;
	wire	wire_ni1ii_dataout;
	wire	wire_ni1il_dataout;
	wire	wire_ni1iO_dataout;
	wire	wire_ni1li_dataout;
	wire	wire_ni1ll_dataout;
	wire	wire_ni1lO_dataout;
	wire	wire_ni1Oi_dataout;
	wire	wire_ni1Ol_dataout;
	wire	wire_ni1OO_dataout;
	wire	wire_niO_dataout;
	wire	wire_nl_dataout;
	wire  [35:0]   wire_n000O_o;
	wire  [13:0]   wire_n001l_o;
	wire  [13:0]   wire_n010O_o;
	wire  [10:0]   wire_n0l1i_o;
	wire  [9:0]   wire_n0lOl_o;
	wire  [2:0]   wire_n0O0O_o;
	wire  [0:0]   wire_n0Oii_o;
	wire  [21:0]   wire_n1li_o;
	wire  [31:0]   wire_nl0iO_o;
	wire  [2:0]   wire_nli_o;
	wire  [0:0]   wire_nll_o;
	wire  [36:0]   wire_n1iO_o;
	wire  [23:0]   wire_nl0i_o;
	wire  [49:0]   wire_nl0il_o;
	wire  wire_n1ill_o;
	wire  wire_n1ilO_o;
	wire  wire_n1iOi_o;
	wire  wire_n1iOl_o;
	wire  wire_n1iOO_o;
	wire  wire_n1l0i_o;
	wire  wire_n1l0l_o;
	wire  wire_n1l0O_o;
	wire  wire_n1l1i_o;
	wire  wire_n1l1l_o;
	wire  wire_n1l1O_o;
	wire  wire_n1lii_o;
	wire  wire_n1lil_o;
	wire  wire_n1liO_o;
	wire  wire_n1lli_o;
	wire  wire_n1lll_o;
	wire  wire_n1llO_o;
	wire  wire_n1lOi_o;
	wire  wire_n1lOl_o;
	wire  wire_n1lOO_o;
	wire  wire_n1O0i_o;
	wire  wire_n1O0l_o;
	wire  wire_n1O0O_o;
	wire  wire_n1O1i_o;
	wire  wire_n1O1l_o;
	wire  wire_n1O1O_o;
	wire  wire_n1Oii_o;
	wire  wire_n1Oil_o;
	wire  wire_n1OiO_o;
	wire  wire_n1Oli_o;
	wire  wire_n1Oll_o;
	wire  wire_n1OlO_o;
	wire  wire_n1OOi_o;
	wire  nl1iiO;
	wire  nl1ili;
	wire  nl1ill;
	wire  nl1ilO;
	wire  nl1iOi;
	wire  nl1iOl;
	wire  nl1iOO;
	wire  nl1l0i;
	wire  nl1l0l;
	wire  nl1l0O;
	wire  nl1l1i;
	wire  nl1l1l;
	wire  nl1l1O;
	wire  nl1lii;
	wire  nl1lil;

	altera_syncram   nl1OOl
	( 
	.aclr1(areset),
	.address_a({n1l, nlOO, nl1O}),
	.address_b({nii, n0O, n0i}),
	.clock0(clk),
	.clock1(clk),
	.clocken0(1'b1),
	.clocken1(nil),
	.data_a({a[22:0]}),
	.eccstatus(),
	.q_a(),
	.q_b(wire_nl1OOl_q_b),
	.wren_a(1'b1),
	.aclr0(),
	.address2_a(),
	.address2_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clocken2(),
	.clocken3(),
	.data_b(),
	.eccencbypass(),
	.eccencparity(),
	.rden_a(),
	.rden_b(),
	.sclr(),
	.wren_b()
	);
	defparam
		nl1OOl.address_aclr_a = "NONE",
		nl1OOl.address_aclr_b = "NONE",
		nl1OOl.address_reg_b = "CLOCK0",
		nl1OOl.byte_size = 0,
		nl1OOl.byteena_reg_b = "CLOCK0",
		nl1OOl.clock_enable_core_a = "USE_INPUT_CLKEN",
		nl1OOl.clock_enable_core_b = "USE_INPUT_CLKEN",
		nl1OOl.clock_enable_input_a = "NORMAL",
		nl1OOl.clock_enable_input_b = "NORMAL",
		nl1OOl.clock_enable_output_a = "NORMAL",
		nl1OOl.clock_enable_output_b = "NORMAL",
		nl1OOl.ecc_pipeline_stage_enabled = "FALSE",
		nl1OOl.enable_coherent_read = "FALSE",
		nl1OOl.enable_ecc = "FALSE",
		nl1OOl.enable_ecc_encoder_bypass = "FALSE",
		nl1OOl.enable_force_to_zero = "FALSE",
		nl1OOl.implement_in_les = "OFF",
		nl1OOl.indata_reg_b = "CLOCK0",
		nl1OOl.init_file_layout = "PORT_A",
		nl1OOl.intended_device_family = "Cyclone V",
		nl1OOl.numwords_a = 5,
		nl1OOl.numwords_b = 5,
		nl1OOl.operation_mode = "DUAL_PORT",
		nl1OOl.outdata_aclr_a = "NONE",
		nl1OOl.outdata_aclr_b = "CLEAR1",
		nl1OOl.outdata_reg_a = "UNREGISTERED",
		nl1OOl.outdata_reg_b = "CLOCK1",
		nl1OOl.outdata_sclr_a = "NONE",
		nl1OOl.outdata_sclr_b = "NONE",
		nl1OOl.power_up_uninitialized = "TRUE",
		nl1OOl.ram_block_type = "MLAB",
		nl1OOl.rdcontrol_reg_b = "CLOCK0",
		nl1OOl.read_during_write_mode_mixed_ports = "DONT_CARE",
		nl1OOl.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		nl1OOl.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		nl1OOl.width_a = 23,
		nl1OOl.width_b = 23,
		nl1OOl.width_byteena_a = 1,
		nl1OOl.width_byteena_b = 1,
		nl1OOl.width_eccencparity = 8,
		nl1OOl.width_eccstatus = 2,
		nl1OOl.widthad2_a = 1,
		nl1OOl.widthad2_b = 1,
		nl1OOl.widthad_a = 3,
		nl1OOl.widthad_b = 3,
		nl1OOl.lpm_hint = "ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES=DONT CARE, ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_POWER_UP_CONDITIONS=AUTO, ACF_DISABLE_MLAB_RAM_USE=FALSE, ACF_IMPLEMENT_MLAB_IN_16_BIT_DEEP_MODE=FALSE, CLOCK_DUTY_CYCLE_DEPENDENCE=AUTO, ENABLE_RUNTIME_MOD=NO, LOW_POWER_MODE=AUTO, RDEN_POWER_OPTIMIZATION=ON";
	altera_syncram   nli1lO
	( 
	.aclr0(areset),
	.address_a({b[22:14]}),
	.clock0(clk),
	.clocken0(1'b1),
	.eccstatus(),
	.q_a(wire_nli1lO_q_a),
	.q_b(),
	.aclr1(),
	.address2_a(),
	.address2_b(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.eccencbypass(),
	.eccencparity(),
	.rden_a(),
	.rden_b(),
	.sclr(),
	.wren_a(),
	.wren_b()
	);
	defparam
		nli1lO.address_aclr_a = "NONE",
		nli1lO.address_aclr_b = "NONE",
		nli1lO.address_reg_b = "CLOCK1",
		nli1lO.byte_size = 0,
		nli1lO.byteena_reg_b = "CLOCK1",
		nli1lO.clock_enable_core_a = "USE_INPUT_CLKEN",
		nli1lO.clock_enable_core_b = "USE_INPUT_CLKEN",
		nli1lO.clock_enable_input_a = "NORMAL",
		nli1lO.clock_enable_input_b = "NORMAL",
		nli1lO.clock_enable_output_a = "NORMAL",
		nli1lO.clock_enable_output_b = "NORMAL",
		nli1lO.ecc_pipeline_stage_enabled = "FALSE",
		nli1lO.enable_coherent_read = "FALSE",
		nli1lO.enable_ecc = "FALSE",
		nli1lO.enable_ecc_encoder_bypass = "FALSE",
		nli1lO.enable_force_to_zero = "FALSE",
		nli1lO.implement_in_les = "OFF",
		nli1lO.indata_reg_b = "CLOCK1",
		nli1lO.init_file = "div_s_memoryC2_uid120_invTables_lutmem.hex",
		nli1lO.init_file_layout = "PORT_A",
		nli1lO.intended_device_family = "Cyclone V",
		nli1lO.numwords_a = 512,
		nli1lO.numwords_b = 0,
		nli1lO.operation_mode = "ROM",
		nli1lO.outdata_aclr_a = "CLEAR0",
		nli1lO.outdata_aclr_b = "NONE",
		nli1lO.outdata_reg_a = "CLOCK0",
		nli1lO.outdata_reg_b = "UNREGISTERED",
		nli1lO.outdata_sclr_a = "NONE",
		nli1lO.outdata_sclr_b = "NONE",
		nli1lO.power_up_uninitialized = "FALSE",
		nli1lO.ram_block_type = "M10K",
		nli1lO.rdcontrol_reg_b = "CLOCK1",
		nli1lO.read_during_write_mode_mixed_ports = "DONT_CARE",
		nli1lO.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		nli1lO.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		nli1lO.width_a = 12,
		nli1lO.width_b = 1,
		nli1lO.width_byteena_a = 1,
		nli1lO.width_byteena_b = 1,
		nli1lO.width_eccencparity = 8,
		nli1lO.width_eccstatus = 2,
		nli1lO.widthad2_a = 1,
		nli1lO.widthad2_b = 1,
		nli1lO.widthad_a = 9,
		nli1lO.widthad_b = 1,
		nli1lO.lpm_hint = "ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES=DONT CARE, ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_POWER_UP_CONDITIONS=AUTO, ACF_DISABLE_MLAB_RAM_USE=FALSE, ACF_IMPLEMENT_MLAB_IN_16_BIT_DEEP_MODE=FALSE, CLOCK_DUTY_CYCLE_DEPENDENCE=AUTO, ENABLE_RUNTIME_MOD=NO, LOW_POWER_MODE=AUTO, RDEN_POWER_OPTIMIZATION=ON";
	altera_syncram   nlilOl
	( 
	.aclr0(areset),
	.address_a({nlil0i, nlil1O, nlil1l, nlil1i, nliiOO, nliiOl, nliiOi, nliilO, nliill}),
	.clock0(clk),
	.clocken0(1'b1),
	.eccstatus(),
	.q_a(wire_nlilOl_q_a),
	.q_b(),
	.aclr1(),
	.address2_a(),
	.address2_b(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.eccencbypass(),
	.eccencparity(),
	.rden_a(),
	.rden_b(),
	.sclr(),
	.wren_a(),
	.wren_b()
	);
	defparam
		nlilOl.address_aclr_a = "NONE",
		nlilOl.address_aclr_b = "NONE",
		nlilOl.address_reg_b = "CLOCK1",
		nlilOl.byte_size = 0,
		nlilOl.byteena_reg_b = "CLOCK1",
		nlilOl.clock_enable_core_a = "USE_INPUT_CLKEN",
		nlilOl.clock_enable_core_b = "USE_INPUT_CLKEN",
		nlilOl.clock_enable_input_a = "NORMAL",
		nlilOl.clock_enable_input_b = "NORMAL",
		nlilOl.clock_enable_output_a = "NORMAL",
		nlilOl.clock_enable_output_b = "NORMAL",
		nlilOl.ecc_pipeline_stage_enabled = "FALSE",
		nlilOl.enable_coherent_read = "FALSE",
		nlilOl.enable_ecc = "FALSE",
		nlilOl.enable_ecc_encoder_bypass = "FALSE",
		nlilOl.enable_force_to_zero = "FALSE",
		nlilOl.implement_in_les = "OFF",
		nlilOl.indata_reg_b = "CLOCK1",
		nlilOl.init_file = "div_s_memoryC1_uid116_invTables_lutmem.hex",
		nlilOl.init_file_layout = "PORT_A",
		nlilOl.intended_device_family = "Cyclone V",
		nlilOl.numwords_a = 512,
		nlilOl.numwords_b = 0,
		nlilOl.operation_mode = "ROM",
		nlilOl.outdata_aclr_a = "CLEAR0",
		nlilOl.outdata_aclr_b = "NONE",
		nlilOl.outdata_reg_a = "CLOCK0",
		nlilOl.outdata_reg_b = "UNREGISTERED",
		nlilOl.outdata_sclr_a = "NONE",
		nlilOl.outdata_sclr_b = "NONE",
		nlilOl.power_up_uninitialized = "FALSE",
		nlilOl.ram_block_type = "M10K",
		nlilOl.rdcontrol_reg_b = "CLOCK1",
		nlilOl.read_during_write_mode_mixed_ports = "DONT_CARE",
		nlilOl.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		nlilOl.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		nlilOl.width_a = 20,
		nlilOl.width_b = 1,
		nlilOl.width_byteena_a = 1,
		nlilOl.width_byteena_b = 1,
		nlilOl.width_eccencparity = 8,
		nlilOl.width_eccstatus = 2,
		nlilOl.widthad2_a = 1,
		nlilOl.widthad2_b = 1,
		nlilOl.widthad_a = 9,
		nlilOl.widthad_b = 1,
		nlilOl.lpm_hint = "ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES=DONT CARE, ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_POWER_UP_CONDITIONS=AUTO, ACF_DISABLE_MLAB_RAM_USE=FALSE, ACF_IMPLEMENT_MLAB_IN_16_BIT_DEEP_MODE=FALSE, CLOCK_DUTY_CYCLE_DEPENDENCE=AUTO, ENABLE_RUNTIME_MOD=NO, LOW_POWER_MODE=AUTO, RDEN_POWER_OPTIMIZATION=ON";
	altera_syncram   nlli1i
	( 
	.aclr0(areset),
	.address_a({nll00O, nll00l, nll00i, nll01O, nll01l, nll01i, nll1OO, nll1Ol, nll1Oi}),
	.clock0(clk),
	.clocken0(1'b1),
	.eccstatus(),
	.q_a(wire_nlli1i_q_a),
	.q_b(),
	.aclr1(),
	.address2_a(),
	.address2_b(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.eccencbypass(),
	.eccencparity(),
	.rden_a(),
	.rden_b(),
	.sclr(),
	.wren_a(),
	.wren_b()
	);
	defparam
		nlli1i.address_aclr_a = "NONE",
		nlli1i.address_aclr_b = "NONE",
		nlli1i.address_reg_b = "CLOCK1",
		nlli1i.byte_size = 0,
		nlli1i.byteena_reg_b = "CLOCK1",
		nlli1i.clock_enable_core_a = "USE_INPUT_CLKEN",
		nlli1i.clock_enable_core_b = "USE_INPUT_CLKEN",
		nlli1i.clock_enable_input_a = "NORMAL",
		nlli1i.clock_enable_input_b = "NORMAL",
		nlli1i.clock_enable_output_a = "NORMAL",
		nlli1i.clock_enable_output_b = "NORMAL",
		nlli1i.ecc_pipeline_stage_enabled = "FALSE",
		nlli1i.enable_coherent_read = "FALSE",
		nlli1i.enable_ecc = "FALSE",
		nlli1i.enable_ecc_encoder_bypass = "FALSE",
		nlli1i.enable_force_to_zero = "FALSE",
		nlli1i.implement_in_les = "OFF",
		nlli1i.indata_reg_b = "CLOCK1",
		nlli1i.init_file = "div_s_memoryC0_uid113_invTables_lutmem.hex",
		nlli1i.init_file_layout = "PORT_A",
		nlli1i.intended_device_family = "Cyclone V",
		nlli1i.numwords_a = 512,
		nlli1i.numwords_b = 0,
		nlli1i.operation_mode = "ROM",
		nlli1i.outdata_aclr_a = "CLEAR0",
		nlli1i.outdata_aclr_b = "NONE",
		nlli1i.outdata_reg_a = "CLOCK0",
		nlli1i.outdata_reg_b = "UNREGISTERED",
		nlli1i.outdata_sclr_a = "NONE",
		nlli1i.outdata_sclr_b = "NONE",
		nlli1i.power_up_uninitialized = "FALSE",
		nlli1i.ram_block_type = "M10K",
		nlli1i.rdcontrol_reg_b = "CLOCK1",
		nlli1i.read_during_write_mode_mixed_ports = "DONT_CARE",
		nlli1i.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		nlli1i.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		nlli1i.width_a = 11,
		nlli1i.width_b = 1,
		nlli1i.width_byteena_a = 1,
		nlli1i.width_byteena_b = 1,
		nlli1i.width_eccencparity = 8,
		nlli1i.width_eccstatus = 2,
		nlli1i.widthad2_a = 1,
		nlli1i.widthad2_b = 1,
		nlli1i.widthad_a = 9,
		nlli1i.widthad_b = 1,
		nlli1i.lpm_hint = "ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES=DONT CARE, ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_POWER_UP_CONDITIONS=AUTO, ACF_DISABLE_MLAB_RAM_USE=FALSE, ACF_IMPLEMENT_MLAB_IN_16_BIT_DEEP_MODE=FALSE, CLOCK_DUTY_CYCLE_DEPENDENCE=AUTO, ENABLE_RUNTIME_MOD=NO, LOW_POWER_MODE=AUTO, RDEN_POWER_OPTIMIZATION=ON";
	altera_syncram   nlli1l
	( 
	.aclr0(areset),
	.address_a({nll00O, nll00l, nll00i, nll01O, nll01l, nll01i, nll1OO, nll1Ol, nll1Oi}),
	.clock0(clk),
	.clocken0(1'b1),
	.eccstatus(),
	.q_a(wire_nlli1l_q_a),
	.q_b(),
	.aclr1(),
	.address2_a(),
	.address2_b(),
	.address_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_a(),
	.data_b(),
	.eccencbypass(),
	.eccencparity(),
	.rden_a(),
	.rden_b(),
	.sclr(),
	.wren_a(),
	.wren_b()
	);
	defparam
		nlli1l.address_aclr_a = "NONE",
		nlli1l.address_aclr_b = "NONE",
		nlli1l.address_reg_b = "CLOCK1",
		nlli1l.byte_size = 0,
		nlli1l.byteena_reg_b = "CLOCK1",
		nlli1l.clock_enable_core_a = "USE_INPUT_CLKEN",
		nlli1l.clock_enable_core_b = "USE_INPUT_CLKEN",
		nlli1l.clock_enable_input_a = "NORMAL",
		nlli1l.clock_enable_input_b = "NORMAL",
		nlli1l.clock_enable_output_a = "NORMAL",
		nlli1l.clock_enable_output_b = "NORMAL",
		nlli1l.ecc_pipeline_stage_enabled = "FALSE",
		nlli1l.enable_coherent_read = "FALSE",
		nlli1l.enable_ecc = "FALSE",
		nlli1l.enable_ecc_encoder_bypass = "FALSE",
		nlli1l.enable_force_to_zero = "FALSE",
		nlli1l.implement_in_les = "OFF",
		nlli1l.indata_reg_b = "CLOCK1",
		nlli1l.init_file = "div_s_memoryC0_uid112_invTables_lutmem.hex",
		nlli1l.init_file_layout = "PORT_A",
		nlli1l.intended_device_family = "Cyclone V",
		nlli1l.numwords_a = 512,
		nlli1l.numwords_b = 0,
		nlli1l.operation_mode = "ROM",
		nlli1l.outdata_aclr_a = "CLEAR0",
		nlli1l.outdata_aclr_b = "NONE",
		nlli1l.outdata_reg_a = "CLOCK0",
		nlli1l.outdata_reg_b = "UNREGISTERED",
		nlli1l.outdata_sclr_a = "NONE",
		nlli1l.outdata_sclr_b = "NONE",
		nlli1l.power_up_uninitialized = "FALSE",
		nlli1l.ram_block_type = "M10K",
		nlli1l.rdcontrol_reg_b = "CLOCK1",
		nlli1l.read_during_write_mode_mixed_ports = "DONT_CARE",
		nlli1l.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		nlli1l.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		nlli1l.width_a = 20,
		nlli1l.width_b = 1,
		nlli1l.width_byteena_a = 1,
		nlli1l.width_byteena_b = 1,
		nlli1l.width_eccencparity = 8,
		nlli1l.width_eccstatus = 2,
		nlli1l.widthad2_a = 1,
		nlli1l.widthad2_b = 1,
		nlli1l.widthad_a = 9,
		nlli1l.widthad_b = 1,
		nlli1l.lpm_hint = "ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES=DONT CARE, ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_POWER_UP_CONDITIONS=AUTO, ACF_DISABLE_MLAB_RAM_USE=FALSE, ACF_IMPLEMENT_MLAB_IN_16_BIT_DEEP_MODE=FALSE, CLOCK_DUTY_CYCLE_DEPENDENCE=AUTO, ENABLE_RUNTIME_MOD=NO, LOW_POWER_MODE=AUTO, RDEN_POWER_OPTIMIZATION=ON";
	altera_syncram   nllill
	( 
	.aclr1(areset),
	.address_a({n0l1O, n0l1l, n001i}),
	.address_b({n0O1O, n0O1l, n0lOO}),
	.clock0(clk),
	.clock1(clk),
	.clocken0(1'b1),
	.clocken1(n0O0i),
	.data_a({n0llO, n0lll, n0lli, n0liO, n0lil, n0lii, n0l0O, n0l0l, n0l0i}),
	.eccstatus(),
	.q_a(),
	.q_b(wire_nllill_q_b),
	.wren_a(1'b1),
	.aclr0(),
	.address2_a(),
	.address2_b(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clocken2(),
	.clocken3(),
	.data_b(),
	.eccencbypass(),
	.eccencparity(),
	.rden_a(),
	.rden_b(),
	.sclr(),
	.wren_b()
	);
	defparam
		nllill.address_aclr_a = "NONE",
		nllill.address_aclr_b = "NONE",
		nllill.address_reg_b = "CLOCK0",
		nllill.byte_size = 0,
		nllill.byteena_reg_b = "CLOCK0",
		nllill.clock_enable_core_a = "USE_INPUT_CLKEN",
		nllill.clock_enable_core_b = "USE_INPUT_CLKEN",
		nllill.clock_enable_input_a = "NORMAL",
		nllill.clock_enable_input_b = "NORMAL",
		nllill.clock_enable_output_a = "NORMAL",
		nllill.clock_enable_output_b = "NORMAL",
		nllill.ecc_pipeline_stage_enabled = "FALSE",
		nllill.enable_coherent_read = "FALSE",
		nllill.enable_ecc = "FALSE",
		nllill.enable_ecc_encoder_bypass = "FALSE",
		nllill.enable_force_to_zero = "FALSE",
		nllill.implement_in_les = "OFF",
		nllill.indata_reg_b = "CLOCK0",
		nllill.init_file_layout = "PORT_A",
		nllill.intended_device_family = "Cyclone V",
		nllill.numwords_a = 5,
		nllill.numwords_b = 5,
		nllill.operation_mode = "DUAL_PORT",
		nllill.outdata_aclr_a = "NONE",
		nllill.outdata_aclr_b = "CLEAR1",
		nllill.outdata_reg_a = "UNREGISTERED",
		nllill.outdata_reg_b = "CLOCK1",
		nllill.outdata_sclr_a = "NONE",
		nllill.outdata_sclr_b = "NONE",
		nllill.power_up_uninitialized = "TRUE",
		nllill.ram_block_type = "MLAB",
		nllill.rdcontrol_reg_b = "CLOCK0",
		nllill.read_during_write_mode_mixed_ports = "DONT_CARE",
		nllill.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		nllill.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		nllill.width_a = 9,
		nllill.width_b = 9,
		nllill.width_byteena_a = 1,
		nllill.width_byteena_b = 1,
		nllill.width_eccencparity = 8,
		nllill.width_eccstatus = 2,
		nllill.widthad2_a = 1,
		nllill.widthad2_b = 1,
		nllill.widthad_a = 3,
		nllill.widthad_b = 3,
		nllill.lpm_hint = "ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES=DONT CARE, ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_POWER_UP_CONDITIONS=AUTO, ACF_DISABLE_MLAB_RAM_USE=FALSE, ACF_IMPLEMENT_MLAB_IN_16_BIT_DEEP_MODE=FALSE, CLOCK_DUTY_CYCLE_DEPENDENCE=AUTO, ENABLE_RUNTIME_MOD=NO, LOW_POWER_MODE=AUTO, RDEN_POWER_OPTIMIZATION=ON";
	initial
	begin
		n0i = 0;
		n0O = 0;
	end
	always @ ( posedge clk or  posedge areset)
	begin
		if (areset == 1'b1) 
		begin
			n0i <= 0;
			n0O <= 0;
		end
		else if  (n1O == 1'b0) 
		begin
			n0i <= wire_nli_o[0];
			n0O <= wire_nli_o[1];
		end
	end
	initial
	begin
		n0lOO = 0;
		n0O1l = 0;
	end
	always @ ( posedge clk or  posedge areset)
	begin
		if (areset == 1'b1) 
		begin
			n0lOO <= 0;
			n0O1l <= 0;
		end
		else if  (n0lOi == 1'b0) 
		begin
			n0lOO <= wire_n0O0O_o[0];
			n0O1l <= wire_n0O0O_o[1];
		end
	end
	initial
	begin
		n0l1O = 0;
		n1l = 0;
	end
	always @ ( posedge clk or  posedge areset)
	begin
		if (areset == 1'b1) 
		begin
			n0l1O <= 1;
			n1l <= 1;
		end
		else 
		begin
			n0l1O <= n0O1O;
			n1l <= nii;
		end
	end
	event n0l1O_event;
	event n1l_event;
	initial
		#1 ->n0l1O_event;
	initial
		#1 ->n1l_event;
	always @(n0l1O_event)
		n0l1O <= 1;
	always @(n1l_event)
		n1l <= 1;
	initial
	begin
		n001i = 0;
		n00i = 0;
		n00l = 0;
		n00O = 0;
		n010i = 0;
		n010l = 0;
		n01i = 0;
		n01l = 0;
		n01O = 0;
		n0ii = 0;
		n0il = 0;
		n0iO = 0;
		n0l0i = 0;
		n0l0l = 0;
		n0l0O = 0;
		n0l1l = 0;
		n0li = 0;
		n0lii = 0;
		n0lil = 0;
		n0liO = 0;
		n0ll = 0;
		n0lli = 0;
		n0lll = 0;
		n0llO = 0;
		n0lO = 0;
		n0lOi = 0;
		n0O0i = 0;
		n0O1O = 0;
		n0Oi = 0;
		n0Oil = 0;
		n0Ol = 0;
		n0OO = 0;
		n10i = 0;
		n10l = 0;
		n10O = 0;
		n11i = 0;
		n11l = 0;
		n11O = 0;
		n1ii = 0;
		n1il = 0;
		n1ll = 0;
		n1lO = 0;
		n1O = 0;
		n1Oi = 0;
		n1Ol = 0;
		n1OO = 0;
		ni = 0;
		ni0i = 0;
		ni0ii = 0;
		ni0il = 0;
		ni0iO = 0;
		ni0l = 0;
		ni0li = 0;
		ni0ll = 0;
		ni0lO = 0;
		ni0O = 0;
		ni0Oi = 0;
		ni0Ol = 0;
		ni0OO = 0;
		ni1i = 0;
		ni1l = 0;
		ni1O = 0;
		nii = 0;
		nii0i = 0;
		nii0l = 0;
		nii0O = 0;
		nii1i = 0;
		nii1l = 0;
		nii1O = 0;
		niii = 0;
		niiii = 0;
		niiil = 0;
		niiiO = 0;
		niil = 0;
		niili = 0;
		niill = 0;
		niilO = 0;
		niiO = 0;
		niiOi = 0;
		niiOl = 0;
		niiOO = 0;
		nil = 0;
		nil0i = 0;
		nil0l = 0;
		nil0O = 0;
		nil1i = 0;
		nil1l = 0;
		nil1O = 0;
		nili = 0;
		nilii = 0;
		nilil = 0;
		niliO = 0;
		nill = 0;
		nilli = 0;
		nilll = 0;
		nillO = 0;
		nilO = 0;
		nilOi = 0;
		nilOl = 0;
		nilOO = 0;
		niO0i = 0;
		niO0l = 0;
		niO0O = 0;
		niO1i = 0;
		niO1l = 0;
		niO1O = 0;
		niOi = 0;
		niOii = 0;
		niOil = 0;
		niOiO = 0;
		niOl = 0;
		niOli = 0;
		niOll = 0;
		niOlO = 0;
		niOO = 0;
		niOOi = 0;
		niOOl = 0;
		niOOO = 0;
		nl000i = 0;
		nl000l = 0;
		nl000O = 0;
		nl001i = 0;
		nl001l = 0;
		nl001O = 0;
		nl00i = 0;
		nl00ii = 0;
		nl00il = 0;
		nl00iO = 0;
		nl00l = 0;
		nl00li = 0;
		nl00ll = 0;
		nl00lO = 0;
		nl00O = 0;
		nl00Oi = 0;
		nl00Ol = 0;
		nl00OO = 0;
		nl010i = 0;
		nl010l = 0;
		nl010O = 0;
		nl011i = 0;
		nl011l = 0;
		nl011O = 0;
		nl01i = 0;
		nl01ii = 0;
		nl01il = 0;
		nl01iO = 0;
		nl01l = 0;
		nl01li = 0;
		nl01ll = 0;
		nl01lO = 0;
		nl01O = 0;
		nl01Oi = 0;
		nl01Ol = 0;
		nl01OO = 0;
		nl0i0i = 0;
		nl0i0l = 0;
		nl0i0O = 0;
		nl0i1i = 0;
		nl0i1l = 0;
		nl0i1O = 0;
		nl0ii = 0;
		nl0iii = 0;
		nl0iil = 0;
		nl0iiO = 0;
		nl0ili = 0;
		nl0ill = 0;
		nl0ilO = 0;
		nl0iOi = 0;
		nl0iOl = 0;
		nl0iOO = 0;
		nl0l0i = 0;
		nl0l0l = 0;
		nl0l0O = 0;
		nl0l1i = 0;
		nl0l1l = 0;
		nl0l1O = 0;
		nl0li = 0;
		nl0lii = 0;
		nl0lil = 0;
		nl0liO = 0;
		nl0ll = 0;
		nl0lli = 0;
		nl0lll = 0;
		nl0llO = 0;
		nl0lO = 0;
		nl0lOi = 0;
		nl0lOl = 0;
		nl0lOO = 0;
		nl0O0i = 0;
		nl0O0l = 0;
		nl0O0O = 0;
		nl0O1i = 0;
		nl0O1l = 0;
		nl0O1O = 0;
		nl0Oi = 0;
		nl0Oii = 0;
		nl0Oil = 0;
		nl0OiO = 0;
		nl0Ol = 0;
		nl0Oli = 0;
		nl0Oll = 0;
		nl0OlO = 0;
		nl0OO = 0;
		nl0OOi = 0;
		nl0OOl = 0;
		nl0OOO = 0;
		nl10i = 0;
		nl10l = 0;
		nl10O = 0;
		nl11i = 0;
		nl11l = 0;
		nl11O = 0;
		nl1i = 0;
		nl1ii = 0;
		nl1il = 0;
		nl1iO = 0;
		nl1l = 0;
		nl1li = 0;
		nl1ll = 0;
		nl1lll = 0;
		nl1llO = 0;
		nl1lO = 0;
		nl1lOi = 0;
		nl1lOl = 0;
		nl1lOO = 0;
		nl1O = 0;
		nl1O0i = 0;
		nl1O0l = 0;
		nl1O0O = 0;
		nl1O1i = 0;
		nl1O1l = 0;
		nl1O1O = 0;
		nl1Oi = 0;
		nl1Oii = 0;
		nl1Oil = 0;
		nl1OiO = 0;
		nl1Ol = 0;
		nl1Oli = 0;
		nl1Oll = 0;
		nl1OlO = 0;
		nl1OO = 0;
		nl1OOi = 0;
		nl1OOO = 0;
		nli00i = 0;
		nli00l = 0;
		nli00O = 0;
		nli01i = 0;
		nli01l = 0;
		nli01O = 0;
		nli0i = 0;
		nli0ii = 0;
		nli0il = 0;
		nli0iO = 0;
		nli0l = 0;
		nli0li = 0;
		nli0ll = 0;
		nli0lO = 0;
		nli0O = 0;
		nli0Oi = 0;
		nli0Ol = 0;
		nli0OO = 0;
		nli10i = 0;
		nli10l = 0;
		nli10O = 0;
		nli11i = 0;
		nli11l = 0;
		nli11O = 0;
		nli1i = 0;
		nli1ii = 0;
		nli1il = 0;
		nli1iO = 0;
		nli1l = 0;
		nli1li = 0;
		nli1ll = 0;
		nli1O = 0;
		nli1Oi = 0;
		nli1Ol = 0;
		nli1OO = 0;
		nlii0i = 0;
		nlii0l = 0;
		nlii0O = 0;
		nlii1i = 0;
		nlii1l = 0;
		nlii1O = 0;
		nliii = 0;
		nliiii = 0;
		nliiil = 0;
		nliiiO = 0;
		nliil = 0;
		nliili = 0;
		nliill = 0;
		nliilO = 0;
		nliiO = 0;
		nliiOi = 0;
		nliiOl = 0;
		nliiOO = 0;
		nlil0i = 0;
		nlil0l = 0;
		nlil0O = 0;
		nlil1i = 0;
		nlil1l = 0;
		nlil1O = 0;
		nlili = 0;
		nlilii = 0;
		nlilil = 0;
		nliliO = 0;
		nlill = 0;
		nlilli = 0;
		nlilll = 0;
		nlillO = 0;
		nlilO = 0;
		nlilOi = 0;
		nlilOO = 0;
		nliO0i = 0;
		nliO0l = 0;
		nliO0O = 0;
		nliO1i = 0;
		nliO1l = 0;
		nliO1O = 0;
		nliOi = 0;
		nliOii = 0;
		nliOil = 0;
		nliOiO = 0;
		nliOl = 0;
		nliOli = 0;
		nliOll = 0;
		nliOlO = 0;
		nliOO = 0;
		nliOOi = 0;
		nliOOl = 0;
		nliOOO = 0;
		nll00i = 0;
		nll00l = 0;
		nll00O = 0;
		nll01i = 0;
		nll01l = 0;
		nll01O = 0;
		nll0i = 0;
		nll0ii = 0;
		nll0il = 0;
		nll0iO = 0;
		nll0l = 0;
		nll0li = 0;
		nll0ll = 0;
		nll0lO = 0;
		nll0O = 0;
		nll0Oi = 0;
		nll0Ol = 0;
		nll0OO = 0;
		nll10i = 0;
		nll10l = 0;
		nll10O = 0;
		nll11i = 0;
		nll11l = 0;
		nll11O = 0;
		nll1i = 0;
		nll1ii = 0;
		nll1il = 0;
		nll1iO = 0;
		nll1l = 0;
		nll1li = 0;
		nll1ll = 0;
		nll1lO = 0;
		nll1O = 0;
		nll1Oi = 0;
		nll1Ol = 0;
		nll1OO = 0;
		nlli0i = 0;
		nlli0l = 0;
		nlli0O = 0;
		nlli1O = 0;
		nllii = 0;
		nlliii = 0;
		nlliil = 0;
		nlliiO = 0;
		nllil = 0;
		nllili = 0;
		nllilO = 0;
		nlliO = 0;
		nlliOi = 0;
		nlliOl = 0;
		nlliOO = 0;
		nlll0i = 0;
		nlll0l = 0;
		nlll0O = 0;
		nlll1i = 0;
		nlll1l = 0;
		nlll1O = 0;
		nllli = 0;
		nlllii = 0;
		nlllil = 0;
		nllliO = 0;
		nllll = 0;
		nlllli = 0;
		nlllll = 0;
		nllllO = 0;
		nlllO = 0;
		nlllOi = 0;
		nlllOl = 0;
		nlllOO = 0;
		nllO0i = 0;
		nllO0l = 0;
		nllO0O = 0;
		nllO1i = 0;
		nllO1l = 0;
		nllO1O = 0;
		nllOi = 0;
		nllOii = 0;
		nllOil = 0;
		nllOiO = 0;
		nllOl = 0;
		nllOli = 0;
		nllOll = 0;
		nllOlO = 0;
		nllOO = 0;
		nllOOi = 0;
		nllOOl = 0;
		nllOOO = 0;
		nlO0i = 0;
		nlO0l = 0;
		nlO0O = 0;
		nlO10i = 0;
		nlO10l = 0;
		nlO10O = 0;
		nlO11i = 0;
		nlO11l = 0;
		nlO11O = 0;
		nlO1i = 0;
		nlO1l = 0;
		nlO1O = 0;
		nlOii = 0;
		nlOil = 0;
		nlOiO = 0;
		nlOli = 0;
		nlOll = 0;
		nlOlO = 0;
		nlOO = 0;
		nlOOi = 0;
		nlOOl = 0;
		nlOOO = 0;
	end
	always @ ( posedge clk or  posedge areset)
	begin
		if (areset == 1'b1) 
		begin
			n001i <= 0;
			n00i <= 0;
			n00l <= 0;
			n00O <= 0;
			n010i <= 0;
			n010l <= 0;
			n01i <= 0;
			n01l <= 0;
			n01O <= 0;
			n0ii <= 0;
			n0il <= 0;
			n0iO <= 0;
			n0l0i <= 0;
			n0l0l <= 0;
			n0l0O <= 0;
			n0l1l <= 0;
			n0li <= 0;
			n0lii <= 0;
			n0lil <= 0;
			n0liO <= 0;
			n0ll <= 0;
			n0lli <= 0;
			n0lll <= 0;
			n0llO <= 0;
			n0lO <= 0;
			n0lOi <= 0;
			n0O0i <= 0;
			n0O1O <= 0;
			n0Oi <= 0;
			n0Oil <= 0;
			n0Ol <= 0;
			n0OO <= 0;
			n10i <= 0;
			n10l <= 0;
			n10O <= 0;
			n11i <= 0;
			n11l <= 0;
			n11O <= 0;
			n1ii <= 0;
			n1il <= 0;
			n1ll <= 0;
			n1lO <= 0;
			n1O <= 0;
			n1Oi <= 0;
			n1Ol <= 0;
			n1OO <= 0;
			ni <= 0;
			ni0i <= 0;
			ni0ii <= 0;
			ni0il <= 0;
			ni0iO <= 0;
			ni0l <= 0;
			ni0li <= 0;
			ni0ll <= 0;
			ni0lO <= 0;
			ni0O <= 0;
			ni0Oi <= 0;
			ni0Ol <= 0;
			ni0OO <= 0;
			ni1i <= 0;
			ni1l <= 0;
			ni1O <= 0;
			nii <= 0;
			nii0i <= 0;
			nii0l <= 0;
			nii0O <= 0;
			nii1i <= 0;
			nii1l <= 0;
			nii1O <= 0;
			niii <= 0;
			niiii <= 0;
			niiil <= 0;
			niiiO <= 0;
			niil <= 0;
			niili <= 0;
			niill <= 0;
			niilO <= 0;
			niiO <= 0;
			niiOi <= 0;
			niiOl <= 0;
			niiOO <= 0;
			nil <= 0;
			nil0i <= 0;
			nil0l <= 0;
			nil0O <= 0;
			nil1i <= 0;
			nil1l <= 0;
			nil1O <= 0;
			nili <= 0;
			nilii <= 0;
			nilil <= 0;
			niliO <= 0;
			nill <= 0;
			nilli <= 0;
			nilll <= 0;
			nillO <= 0;
			nilO <= 0;
			nilOi <= 0;
			nilOl <= 0;
			nilOO <= 0;
			niO0i <= 0;
			niO0l <= 0;
			niO0O <= 0;
			niO1i <= 0;
			niO1l <= 0;
			niO1O <= 0;
			niOi <= 0;
			niOii <= 0;
			niOil <= 0;
			niOiO <= 0;
			niOl <= 0;
			niOli <= 0;
			niOll <= 0;
			niOlO <= 0;
			niOO <= 0;
			niOOi <= 0;
			niOOl <= 0;
			niOOO <= 0;
			nl000i <= 0;
			nl000l <= 0;
			nl000O <= 0;
			nl001i <= 0;
			nl001l <= 0;
			nl001O <= 0;
			nl00i <= 0;
			nl00ii <= 0;
			nl00il <= 0;
			nl00iO <= 0;
			nl00l <= 0;
			nl00li <= 0;
			nl00ll <= 0;
			nl00lO <= 0;
			nl00O <= 0;
			nl00Oi <= 0;
			nl00Ol <= 0;
			nl00OO <= 0;
			nl010i <= 0;
			nl010l <= 0;
			nl010O <= 0;
			nl011i <= 0;
			nl011l <= 0;
			nl011O <= 0;
			nl01i <= 0;
			nl01ii <= 0;
			nl01il <= 0;
			nl01iO <= 0;
			nl01l <= 0;
			nl01li <= 0;
			nl01ll <= 0;
			nl01lO <= 0;
			nl01O <= 0;
			nl01Oi <= 0;
			nl01Ol <= 0;
			nl01OO <= 0;
			nl0i0i <= 0;
			nl0i0l <= 0;
			nl0i0O <= 0;
			nl0i1i <= 0;
			nl0i1l <= 0;
			nl0i1O <= 0;
			nl0ii <= 0;
			nl0iii <= 0;
			nl0iil <= 0;
			nl0iiO <= 0;
			nl0ili <= 0;
			nl0ill <= 0;
			nl0ilO <= 0;
			nl0iOi <= 0;
			nl0iOl <= 0;
			nl0iOO <= 0;
			nl0l0i <= 0;
			nl0l0l <= 0;
			nl0l0O <= 0;
			nl0l1i <= 0;
			nl0l1l <= 0;
			nl0l1O <= 0;
			nl0li <= 0;
			nl0lii <= 0;
			nl0lil <= 0;
			nl0liO <= 0;
			nl0ll <= 0;
			nl0lli <= 0;
			nl0lll <= 0;
			nl0llO <= 0;
			nl0lO <= 0;
			nl0lOi <= 0;
			nl0lOl <= 0;
			nl0lOO <= 0;
			nl0O0i <= 0;
			nl0O0l <= 0;
			nl0O0O <= 0;
			nl0O1i <= 0;
			nl0O1l <= 0;
			nl0O1O <= 0;
			nl0Oi <= 0;
			nl0Oii <= 0;
			nl0Oil <= 0;
			nl0OiO <= 0;
			nl0Ol <= 0;
			nl0Oli <= 0;
			nl0Oll <= 0;
			nl0OlO <= 0;
			nl0OO <= 0;
			nl0OOi <= 0;
			nl0OOl <= 0;
			nl0OOO <= 0;
			nl10i <= 0;
			nl10l <= 0;
			nl10O <= 0;
			nl11i <= 0;
			nl11l <= 0;
			nl11O <= 0;
			nl1i <= 0;
			nl1ii <= 0;
			nl1il <= 0;
			nl1iO <= 0;
			nl1l <= 0;
			nl1li <= 0;
			nl1ll <= 0;
			nl1lll <= 0;
			nl1llO <= 0;
			nl1lO <= 0;
			nl1lOi <= 0;
			nl1lOl <= 0;
			nl1lOO <= 0;
			nl1O <= 0;
			nl1O0i <= 0;
			nl1O0l <= 0;
			nl1O0O <= 0;
			nl1O1i <= 0;
			nl1O1l <= 0;
			nl1O1O <= 0;
			nl1Oi <= 0;
			nl1Oii <= 0;
			nl1Oil <= 0;
			nl1OiO <= 0;
			nl1Ol <= 0;
			nl1Oli <= 0;
			nl1Oll <= 0;
			nl1OlO <= 0;
			nl1OO <= 0;
			nl1OOi <= 0;
			nl1OOO <= 0;
			nli00i <= 0;
			nli00l <= 0;
			nli00O <= 0;
			nli01i <= 0;
			nli01l <= 0;
			nli01O <= 0;
			nli0i <= 0;
			nli0ii <= 0;
			nli0il <= 0;
			nli0iO <= 0;
			nli0l <= 0;
			nli0li <= 0;
			nli0ll <= 0;
			nli0lO <= 0;
			nli0O <= 0;
			nli0Oi <= 0;
			nli0Ol <= 0;
			nli0OO <= 0;
			nli10i <= 0;
			nli10l <= 0;
			nli10O <= 0;
			nli11i <= 0;
			nli11l <= 0;
			nli11O <= 0;
			nli1i <= 0;
			nli1ii <= 0;
			nli1il <= 0;
			nli1iO <= 0;
			nli1l <= 0;
			nli1li <= 0;
			nli1ll <= 0;
			nli1O <= 0;
			nli1Oi <= 0;
			nli1Ol <= 0;
			nli1OO <= 0;
			nlii0i <= 0;
			nlii0l <= 0;
			nlii0O <= 0;
			nlii1i <= 0;
			nlii1l <= 0;
			nlii1O <= 0;
			nliii <= 0;
			nliiii <= 0;
			nliiil <= 0;
			nliiiO <= 0;
			nliil <= 0;
			nliili <= 0;
			nliill <= 0;
			nliilO <= 0;
			nliiO <= 0;
			nliiOi <= 0;
			nliiOl <= 0;
			nliiOO <= 0;
			nlil0i <= 0;
			nlil0l <= 0;
			nlil0O <= 0;
			nlil1i <= 0;
			nlil1l <= 0;
			nlil1O <= 0;
			nlili <= 0;
			nlilii <= 0;
			nlilil <= 0;
			nliliO <= 0;
			nlill <= 0;
			nlilli <= 0;
			nlilll <= 0;
			nlillO <= 0;
			nlilO <= 0;
			nlilOi <= 0;
			nlilOO <= 0;
			nliO0i <= 0;
			nliO0l <= 0;
			nliO0O <= 0;
			nliO1i <= 0;
			nliO1l <= 0;
			nliO1O <= 0;
			nliOi <= 0;
			nliOii <= 0;
			nliOil <= 0;
			nliOiO <= 0;
			nliOl <= 0;
			nliOli <= 0;
			nliOll <= 0;
			nliOlO <= 0;
			nliOO <= 0;
			nliOOi <= 0;
			nliOOl <= 0;
			nliOOO <= 0;
			nll00i <= 0;
			nll00l <= 0;
			nll00O <= 0;
			nll01i <= 0;
			nll01l <= 0;
			nll01O <= 0;
			nll0i <= 0;
			nll0ii <= 0;
			nll0il <= 0;
			nll0iO <= 0;
			nll0l <= 0;
			nll0li <= 0;
			nll0ll <= 0;
			nll0lO <= 0;
			nll0O <= 0;
			nll0Oi <= 0;
			nll0Ol <= 0;
			nll0OO <= 0;
			nll10i <= 0;
			nll10l <= 0;
			nll10O <= 0;
			nll11i <= 0;
			nll11l <= 0;
			nll11O <= 0;
			nll1i <= 0;
			nll1ii <= 0;
			nll1il <= 0;
			nll1iO <= 0;
			nll1l <= 0;
			nll1li <= 0;
			nll1ll <= 0;
			nll1lO <= 0;
			nll1O <= 0;
			nll1Oi <= 0;
			nll1Ol <= 0;
			nll1OO <= 0;
			nlli0i <= 0;
			nlli0l <= 0;
			nlli0O <= 0;
			nlli1O <= 0;
			nllii <= 0;
			nlliii <= 0;
			nlliil <= 0;
			nlliiO <= 0;
			nllil <= 0;
			nllili <= 0;
			nllilO <= 0;
			nlliO <= 0;
			nlliOi <= 0;
			nlliOl <= 0;
			nlliOO <= 0;
			nlll0i <= 0;
			nlll0l <= 0;
			nlll0O <= 0;
			nlll1i <= 0;
			nlll1l <= 0;
			nlll1O <= 0;
			nllli <= 0;
			nlllii <= 0;
			nlllil <= 0;
			nllliO <= 0;
			nllll <= 0;
			nlllli <= 0;
			nlllll <= 0;
			nllllO <= 0;
			nlllO <= 0;
			nlllOi <= 0;
			nlllOl <= 0;
			nlllOO <= 0;
			nllO0i <= 0;
			nllO0l <= 0;
			nllO0O <= 0;
			nllO1i <= 0;
			nllO1l <= 0;
			nllO1O <= 0;
			nllOi <= 0;
			nllOii <= 0;
			nllOil <= 0;
			nllOiO <= 0;
			nllOl <= 0;
			nllOli <= 0;
			nllOll <= 0;
			nllOlO <= 0;
			nllOO <= 0;
			nllOOi <= 0;
			nllOOl <= 0;
			nllOOO <= 0;
			nlO0i <= 0;
			nlO0l <= 0;
			nlO0O <= 0;
			nlO10i <= 0;
			nlO10l <= 0;
			nlO10O <= 0;
			nlO11i <= 0;
			nlO11l <= 0;
			nlO11O <= 0;
			nlO1i <= 0;
			nlO1l <= 0;
			nlO1O <= 0;
			nlOii <= 0;
			nlOil <= 0;
			nlOiO <= 0;
			nlOli <= 0;
			nlOll <= 0;
			nlOlO <= 0;
			nlOO <= 0;
			nlOOi <= 0;
			nlOOl <= 0;
			nlOOO <= 0;
		end
		else 
		begin
			n001i <= n0lOO;
			n00i <= wire_nl0i_o[19];
			n00l <= wire_nl0i_o[20];
			n00O <= wire_nl0i_o[21];
			n010i <= wire_n010O_o[13];
			n010l <= wire_n001l_o[13];
			n01i <= wire_nl0i_o[16];
			n01l <= wire_nl0i_o[17];
			n01O <= wire_nl0i_o[18];
			n0ii <= wire_nl0i_o[22];
			n0il <= wire_nl0i_o[23];
			n0iO <= wire_nli1lO_q_a[0];
			n0l0i <= wire_n0lOl_o[1];
			n0l0l <= wire_n0lOl_o[2];
			n0l0O <= wire_n0lOl_o[3];
			n0l1l <= n0O1l;
			n0li <= wire_nli1lO_q_a[1];
			n0lii <= wire_n0lOl_o[4];
			n0lil <= wire_n0lOl_o[5];
			n0liO <= wire_n0lOl_o[6];
			n0ll <= wire_nli1lO_q_a[2];
			n0lli <= wire_n0lOl_o[7];
			n0lll <= wire_n0lOl_o[8];
			n0llO <= wire_n0lOl_o[9];
			n0lO <= wire_nli1lO_q_a[3];
			n0lOi <= (((~ n0O1O) & n0O1l) & n0lOO);
			n0O0i <= wire_n0OiO_dataout;
			n0O1O <= wire_n0O0l_dataout;
			n0Oi <= wire_nli1lO_q_a[4];
			n0Oil <= (((~ n0O1O) & n0O1l) & n0lOO);
			n0Ol <= wire_nli1lO_q_a[5];
			n0OO <= wire_nli1lO_q_a[6];
			n10i <= nliOiO;
			n10l <= nliOli;
			n10O <= nliOll;
			n11i <= nliO0O;
			n11l <= nliOii;
			n11O <= nliOil;
			n1ii <= nliOlO;
			n1il <= nliOOi;
			n1ll <= wire_nl0i_o[11];
			n1lO <= wire_nl0i_o[12];
			n1O <= (((~ nii) & n0O) & n0i);
			n1Oi <= wire_nl0i_o[13];
			n1Ol <= wire_nl0i_o[14];
			n1OO <= wire_nl0i_o[15];
			ni <= (((~ nii) & n0O) & n0i);
			ni0i <= wire_nli1lO_q_a[10];
			ni0ii <= wire_nl0il_o[24];
			ni0il <= wire_nl0il_o[25];
			ni0iO <= wire_nl0il_o[26];
			ni0l <= wire_nli1lO_q_a[11];
			ni0li <= wire_nl0il_o[27];
			ni0ll <= wire_nl0il_o[28];
			ni0lO <= wire_nl0il_o[29];
			ni0O <= nli1OO;
			ni0Oi <= wire_nl0il_o[30];
			ni0Ol <= wire_nl0il_o[31];
			ni0OO <= wire_nl0il_o[32];
			ni1i <= wire_nli1lO_q_a[7];
			ni1l <= wire_nli1lO_q_a[8];
			ni1O <= wire_nli1lO_q_a[9];
			nii <= wire_niO_dataout;
			nii0i <= wire_nl0il_o[36];
			nii0l <= wire_nl0il_o[37];
			nii0O <= wire_nl0il_o[38];
			nii1i <= wire_nl0il_o[33];
			nii1l <= wire_nl0il_o[34];
			nii1O <= wire_nl0il_o[35];
			niii <= nli01i;
			niiii <= wire_nl0il_o[39];
			niiil <= wire_nl0il_o[40];
			niiiO <= wire_nl0il_o[41];
			niil <= nli01l;
			niili <= wire_nl0il_o[42];
			niill <= wire_nl0il_o[43];
			niilO <= wire_nl0il_o[44];
			niiO <= nli01O;
			niiOi <= wire_nl0il_o[45];
			niiOl <= wire_nl0il_o[46];
			niiOO <= wire_nl0il_o[47];
			nil <= wire_nl_dataout;
			nil0i <= wire_nl1OOl_q_b[1];
			nil0l <= wire_nl1OOl_q_b[2];
			nil0O <= wire_nl1OOl_q_b[3];
			nil1i <= wire_nl0il_o[48];
			nil1l <= wire_nl0il_o[49];
			nil1O <= wire_nl1OOl_q_b[0];
			nili <= nli00i;
			nilii <= wire_nl1OOl_q_b[4];
			nilil <= wire_nl1OOl_q_b[5];
			niliO <= wire_nl1OOl_q_b[6];
			nill <= nli00l;
			nilli <= wire_nl1OOl_q_b[7];
			nilll <= wire_nl1OOl_q_b[8];
			nillO <= wire_nl1OOl_q_b[9];
			nilO <= nli00O;
			nilOi <= wire_nl1OOl_q_b[10];
			nilOl <= wire_nl1OOl_q_b[11];
			nilOO <= wire_nl1OOl_q_b[12];
			niO0i <= wire_nl1OOl_q_b[16];
			niO0l <= wire_nl1OOl_q_b[17];
			niO0O <= wire_nl1OOl_q_b[18];
			niO1i <= wire_nl1OOl_q_b[13];
			niO1l <= wire_nl1OOl_q_b[14];
			niO1O <= wire_nl1OOl_q_b[15];
			niOi <= nli0ii;
			niOii <= wire_nl1OOl_q_b[19];
			niOil <= wire_nl1OOl_q_b[20];
			niOiO <= wire_nl1OOl_q_b[21];
			niOl <= nli0il;
			niOli <= wire_nl1OOl_q_b[22];
			niOll <= nl1lii;
			niOlO <= wire_nl0iO_o[3];
			niOO <= nli0iO;
			niOOi <= wire_nl0iO_o[4];
			niOOl <= wire_nl0iO_o[5];
			niOOO <= wire_nl0iO_o[6];
			nl000i <= nl000l;
			nl000l <= nl01lO;
			nl000O <= nl1ili;
			nl001i <= nl001l;
			nl001l <= nl001O;
			nl001O <= nl000i;
			nl00i <= wire_nl0iO_o[25];
			nl00ii <= nl00il;
			nl00il <= nl00iO;
			nl00iO <= nl00li;
			nl00l <= wire_nl0iO_o[26];
			nl00li <= nl00ll;
			nl00ll <= nl00lO;
			nl00lO <= nl00Oi;
			nl00O <= wire_nl0iO_o[27];
			nl00Oi <= nl00Ol;
			nl00Ol <= nl000O;
			nl00OO <= (a[31] ^ b[31]);
			nl010i <= nl010l;
			nl010l <= nl010O;
			nl010O <= nl01ii;
			nl011i <= nl011l;
			nl011l <= nl1OOO;
			nl011O <= nl1ilO;
			nl01i <= wire_nl0iO_o[22];
			nl01ii <= nl01il;
			nl01il <= nl01iO;
			nl01iO <= nl01li;
			nl01l <= wire_nl0iO_o[23];
			nl01li <= nl01ll;
			nl01ll <= nl011O;
			nl01lO <= nl1ill;
			nl01O <= wire_nl0iO_o[24];
			nl01Oi <= nl01Ol;
			nl01Ol <= nl01OO;
			nl01OO <= nl001i;
			nl0i0i <= nl0i0l;
			nl0i0l <= nl0i0O;
			nl0i0O <= nl0iii;
			nl0i1i <= nl0i1l;
			nl0i1l <= nl0i1O;
			nl0i1O <= nl0i0i;
			nl0ii <= wire_nl0iO_o[28];
			nl0iii <= nl0iil;
			nl0iil <= nl00OO;
			nl0iiO <= nl0O1O;
			nl0ili <= nl0O0i;
			nl0ill <= nl0O0l;
			nl0ilO <= nl0O0O;
			nl0iOi <= nl0Oii;
			nl0iOl <= nl0Oil;
			nl0iOO <= nl0OiO;
			nl0l0i <= nl0OOi;
			nl0l0l <= nl0OOl;
			nl0l0O <= nl0OOO;
			nl0l1i <= nl0Oli;
			nl0l1l <= nl0Oll;
			nl0l1O <= nl0OlO;
			nl0li <= wire_n1iO_o[15];
			nl0lii <= nli11i;
			nl0lil <= nli11l;
			nl0liO <= nli11O;
			nl0ll <= wire_n1iO_o[16];
			nl0lli <= nli10i;
			nl0lll <= nli10l;
			nl0llO <= nli10O;
			nl0lO <= wire_n1iO_o[17];
			nl0lOi <= nli1ii;
			nl0lOl <= nli1il;
			nl0lOO <= nli1iO;
			nl0O0i <= wire_nl1OOl_q_b[1];
			nl0O0l <= wire_nl1OOl_q_b[2];
			nl0O0O <= wire_nl1OOl_q_b[3];
			nl0O1i <= nli1li;
			nl0O1l <= nli1ll;
			nl0O1O <= wire_nl1OOl_q_b[0];
			nl0Oi <= wire_n1iO_o[18];
			nl0Oii <= wire_nl1OOl_q_b[4];
			nl0Oil <= wire_nl1OOl_q_b[5];
			nl0OiO <= wire_nl1OOl_q_b[6];
			nl0Ol <= wire_n1iO_o[19];
			nl0Oli <= wire_nl1OOl_q_b[7];
			nl0Oll <= wire_nl1OOl_q_b[8];
			nl0OlO <= wire_nl1OOl_q_b[9];
			nl0OO <= wire_n1iO_o[20];
			nl0OOi <= wire_nl1OOl_q_b[10];
			nl0OOl <= wire_nl1OOl_q_b[11];
			nl0OOO <= wire_nl1OOl_q_b[12];
			nl10i <= wire_nl0iO_o[10];
			nl10l <= wire_nl0iO_o[11];
			nl10O <= wire_nl0iO_o[12];
			nl11i <= wire_nl0iO_o[7];
			nl11l <= wire_nl0iO_o[8];
			nl11O <= wire_nl0iO_o[9];
			nl1i <= nli0li;
			nl1ii <= wire_nl0iO_o[13];
			nl1il <= wire_nl0iO_o[14];
			nl1iO <= wire_nl0iO_o[15];
			nl1l <= nli0ll;
			nl1li <= wire_nl0iO_o[16];
			nl1ll <= wire_nl0iO_o[17];
			nl1lll <= nl1iOO;
			nl1llO <= nl1lOi;
			nl1lO <= wire_nl0iO_o[18];
			nl1lOi <= nl1lOl;
			nl1lOl <= nl1lOO;
			nl1lOO <= nl1O1i;
			nl1O <= n0i;
			nl1O0i <= nl1lll;
			nl1O0l <= nl1iOl;
			nl1O0O <= nl1Oii;
			nl1O1i <= nl1O1l;
			nl1O1l <= nl1O1O;
			nl1O1O <= nl1O0i;
			nl1Oi <= wire_nl0iO_o[19];
			nl1Oii <= nl1Oil;
			nl1Oil <= nl1OiO;
			nl1OiO <= nl1Oli;
			nl1Ol <= wire_nl0iO_o[20];
			nl1Oli <= nl1Oll;
			nl1Oll <= nl1OlO;
			nl1OlO <= nl1OOi;
			nl1OO <= wire_nl0iO_o[21];
			nl1OOi <= nl1O0l;
			nl1OOO <= nl1iOi;
			nli00i <= nlii1O;
			nli00l <= nlii0i;
			nli00O <= nlii0l;
			nli01i <= nli0OO;
			nli01l <= nlii1i;
			nli01O <= nlii1l;
			nli0i <= wire_n1iO_o[24];
			nli0ii <= nlii0O;
			nli0il <= nliiii;
			nli0iO <= nliiil;
			nli0l <= wire_n1iO_o[25];
			nli0li <= nliiiO;
			nli0ll <= nliili;
			nli0lO <= b[0];
			nli0O <= wire_n1iO_o[26];
			nli0Oi <= b[1];
			nli0Ol <= b[2];
			nli0OO <= b[3];
			nli10i <= wire_nl1OOl_q_b[16];
			nli10l <= wire_nl1OOl_q_b[17];
			nli10O <= wire_nl1OOl_q_b[18];
			nli11i <= wire_nl1OOl_q_b[13];
			nli11l <= wire_nl1OOl_q_b[14];
			nli11O <= wire_nl1OOl_q_b[15];
			nli1i <= wire_n1iO_o[21];
			nli1ii <= wire_nl1OOl_q_b[19];
			nli1il <= wire_nl1OOl_q_b[20];
			nli1iO <= wire_nl1OOl_q_b[21];
			nli1l <= wire_n1iO_o[22];
			nli1li <= wire_nl1OOl_q_b[22];
			nli1ll <= nl1lii;
			nli1O <= wire_n1iO_o[23];
			nli1Oi <= nli0lO;
			nli1Ol <= nli0Oi;
			nli1OO <= nli0Ol;
			nlii0i <= b[7];
			nlii0l <= b[8];
			nlii0O <= b[9];
			nlii1i <= b[4];
			nlii1l <= b[5];
			nlii1O <= b[6];
			nliii <= wire_n1iO_o[27];
			nliiii <= b[10];
			nliiil <= b[11];
			nliiiO <= b[12];
			nliil <= wire_n1iO_o[28];
			nliili <= b[13];
			nliill <= nlil0l;
			nliilO <= nlil0O;
			nliiO <= wire_n1iO_o[29];
			nliiOi <= nlilii;
			nliiOl <= nlilil;
			nliiOO <= nliliO;
			nlil0i <= nlilOi;
			nlil0l <= b[14];
			nlil0O <= b[15];
			nlil1i <= nlilli;
			nlil1l <= nlilll;
			nlil1O <= nlillO;
			nlili <= wire_n1iO_o[30];
			nlilii <= b[16];
			nlilil <= b[17];
			nliliO <= b[18];
			nlill <= wire_n1iO_o[31];
			nlilli <= b[19];
			nlilll <= b[20];
			nlillO <= b[21];
			nlilO <= wire_n1iO_o[32];
			nlilOi <= b[22];
			nlilOO <= nliOOl;
			nliO0i <= nll11O;
			nliO0l <= nll10i;
			nliO0O <= nll10l;
			nliO1i <= nliOOO;
			nliO1l <= nll11i;
			nliO1O <= nll11l;
			nliOi <= wire_n1iO_o[33];
			nliOii <= nll10O;
			nliOil <= nll1ii;
			nliOiO <= nll1il;
			nliOl <= wire_n1iO_o[34];
			nliOli <= nll1iO;
			nliOll <= nll1li;
			nliOlO <= nll1ll;
			nliOO <= wire_n1iO_o[35];
			nliOOi <= nll1lO;
			nliOOl <= nli1Oi;
			nliOOO <= nli1Ol;
			nll00i <= nll0Oi;
			nll00l <= nll0Ol;
			nll00O <= nll0OO;
			nll01i <= nll0li;
			nll01l <= nll0ll;
			nll01O <= nll0lO;
			nll0i <= wire_n1li_o[1];
			nll0ii <= nliill;
			nll0il <= nliilO;
			nll0iO <= nliiOi;
			nll0l <= wire_n1li_o[2];
			nll0li <= nliiOl;
			nll0ll <= nliiOO;
			nll0lO <= nlil1i;
			nll0O <= wire_n1li_o[3];
			nll0Oi <= nlil1l;
			nll0Ol <= nlil1O;
			nll0OO <= nlil0i;
			nll10i <= nli01O;
			nll10l <= nli00i;
			nll10O <= nli00l;
			nll11i <= nli1OO;
			nll11l <= nli01i;
			nll11O <= nli01l;
			nll1i <= wire_n1iO_o[36];
			nll1ii <= nli00O;
			nll1il <= nli0ii;
			nll1iO <= nli0il;
			nll1l <= n1ll;
			nll1li <= nli0iO;
			nll1ll <= nli0li;
			nll1lO <= nli0ll;
			nll1O <= wire_n1li_o[0];
			nll1Oi <= nll0ii;
			nll1Ol <= nll0il;
			nll1OO <= nll0iO;
			nlli0i <= nlli0l;
			nlli0l <= nlli0O;
			nlli0O <= nlliii;
			nlli1O <= nl1iiO;
			nllii <= wire_n1li_o[4];
			nlliii <= nlliil;
			nlliil <= nlli1O;
			nlliiO <= (wire_nl0iO_o[29] | nlli0i);
			nllil <= wire_n1li_o[5];
			nllili <= nlliiO;
			nllilO <= wire_nllill_q_b[0];
			nlliO <= wire_n1li_o[6];
			nlliOi <= wire_nllill_q_b[1];
			nlliOl <= wire_nllill_q_b[2];
			nlliOO <= wire_nllill_q_b[3];
			nlll0i <= wire_nllill_q_b[7];
			nlll0l <= wire_nllill_q_b[8];
			nlll0O <= wire_n000O_o[24];
			nlll1i <= wire_nllill_q_b[4];
			nlll1l <= wire_nllill_q_b[5];
			nlll1O <= wire_nllill_q_b[6];
			nllli <= wire_n1li_o[7];
			nlllii <= wire_n000O_o[25];
			nlllil <= wire_n000O_o[26];
			nllliO <= wire_n000O_o[27];
			nllll <= wire_n1li_o[8];
			nlllli <= wire_n000O_o[28];
			nlllll <= wire_n000O_o[29];
			nllllO <= wire_n000O_o[30];
			nlllO <= wire_n1li_o[9];
			nlllOi <= wire_n000O_o[31];
			nlllOl <= wire_n000O_o[1];
			nlllOO <= wire_n000O_o[2];
			nllO0i <= wire_n000O_o[6];
			nllO0l <= wire_n000O_o[7];
			nllO0O <= wire_n000O_o[8];
			nllO1i <= wire_n000O_o[3];
			nllO1l <= wire_n000O_o[4];
			nllO1O <= wire_n000O_o[5];
			nllOi <= wire_n1li_o[10];
			nllOii <= wire_n000O_o[9];
			nllOil <= wire_n000O_o[10];
			nllOiO <= wire_n000O_o[11];
			nllOl <= wire_n1li_o[11];
			nllOli <= wire_n000O_o[12];
			nllOll <= wire_n000O_o[13];
			nllOlO <= wire_n000O_o[14];
			nllOO <= wire_n1li_o[12];
			nllOOi <= wire_n000O_o[15];
			nllOOl <= wire_n000O_o[16];
			nllOOO <= wire_n000O_o[17];
			nlO0i <= wire_n1li_o[16];
			nlO0l <= wire_n1li_o[17];
			nlO0O <= wire_n1li_o[18];
			nlO10i <= wire_n000O_o[21];
			nlO10l <= wire_n000O_o[22];
			nlO10O <= wire_n000O_o[23];
			nlO11i <= wire_n000O_o[18];
			nlO11l <= wire_n000O_o[19];
			nlO11O <= wire_n000O_o[20];
			nlO1i <= wire_n1li_o[13];
			nlO1l <= wire_n1li_o[14];
			nlO1O <= wire_n1li_o[15];
			nlOii <= wire_n1li_o[19];
			nlOil <= wire_n1li_o[20];
			nlOiO <= wire_n1li_o[21];
			nlOli <= nlilOO;
			nlOll <= nliO1i;
			nlOlO <= nliO1l;
			nlOO <= n0O;
			nlOOi <= nliO1O;
			nlOOl <= nliO0i;
			nlOOO <= nliO0l;
		end
	end
	assign		wire_n00ii_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_n0Oli_dataout : wire_n0Oll_dataout;
	assign		wire_n00il_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_n0Oll_dataout : wire_n0OlO_dataout;
	assign		wire_n00iO_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_n0OlO_dataout : wire_n0OOi_dataout;
	assign		wire_n00li_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_n0OOi_dataout : wire_n0OOl_dataout;
	assign		wire_n00ll_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_n0OOl_dataout : wire_n0OOO_dataout;
	assign		wire_n00lO_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_n0OOO_dataout : wire_ni11i_dataout;
	assign		wire_n00Oi_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_ni11i_dataout : wire_ni11l_dataout;
	assign		wire_n00Ol_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_ni11l_dataout : wire_ni11O_dataout;
	assign		wire_n00OO_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_ni11O_dataout : wire_ni10i_dataout;
	assign		wire_n0i0i_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_ni1ii_dataout : wire_ni1il_dataout;
	assign		wire_n0i0l_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_ni1il_dataout : wire_ni1iO_dataout;
	assign		wire_n0i0O_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_ni1iO_dataout : wire_ni1li_dataout;
	assign		wire_n0i1i_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_ni10i_dataout : wire_ni10l_dataout;
	assign		wire_n0i1l_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_ni10l_dataout : wire_ni10O_dataout;
	assign		wire_n0i1O_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_ni10O_dataout : wire_ni1ii_dataout;
	assign		wire_n0iii_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_ni1li_dataout : wire_ni1ll_dataout;
	assign		wire_n0iil_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_ni1ll_dataout : wire_ni1lO_dataout;
	assign		wire_n0iiO_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_ni1lO_dataout : wire_ni1Oi_dataout;
	assign		wire_n0ili_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_ni1Oi_dataout : wire_ni1Ol_dataout;
	assign		wire_n0ill_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_ni1Ol_dataout : wire_ni1OO_dataout;
	assign		wire_n0ilO_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_ni1OO_dataout : wire_ni01i_dataout;
	assign		wire_n0iOi_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_ni01i_dataout : wire_ni01l_dataout;
	assign		wire_n0iOl_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_ni01l_dataout : wire_ni01O_dataout;
	assign		wire_n0iOO_dataout = ((~ wire_ni00l_dataout) === 1'b1) ? wire_ni01O_dataout : wire_ni00i_dataout;
	assign		wire_n0O0l_dataout = (n0lOi === 1'b1) ? wire_n0Oii_o[0] : wire_n0O0O_o[2];
	or(wire_n0OiO_dataout, n0Oil, n0O0i);
	and(wire_n0Oli_dataout, ni0ii, (~ nllili));
	and(wire_n0Oll_dataout, ni0il, (~ nllili));
	assign		wire_n0OlO_dataout = ((~ nllili) === 1'b1) ? ni0iO : nl0iiO;
	assign		wire_n0OOi_dataout = ((~ nllili) === 1'b1) ? ni0li : nl0ili;
	assign		wire_n0OOl_dataout = ((~ nllili) === 1'b1) ? ni0ll : nl0ill;
	assign		wire_n0OOO_dataout = ((~ nllili) === 1'b1) ? ni0lO : nl0ilO;
	assign		wire_ni00i_dataout = ((~ nllili) === 1'b1) ? nil1i : nl0O1i;
	assign		wire_ni00l_dataout = ((~ nllili) === 1'b1) ? nil1l : nl0O1l;
	assign		wire_ni01i_dataout = ((~ nllili) === 1'b1) ? niiOi : nl0lOi;
	assign		wire_ni01l_dataout = ((~ nllili) === 1'b1) ? niiOl : nl0lOl;
	assign		wire_ni01O_dataout = ((~ nllili) === 1'b1) ? niiOO : nl0lOO;
	assign		wire_ni10i_dataout = ((~ nllili) === 1'b1) ? nii1i : nl0l1i;
	assign		wire_ni10l_dataout = ((~ nllili) === 1'b1) ? nii1l : nl0l1l;
	assign		wire_ni10O_dataout = ((~ nllili) === 1'b1) ? nii1O : nl0l1O;
	assign		wire_ni11i_dataout = ((~ nllili) === 1'b1) ? ni0Oi : nl0iOi;
	assign		wire_ni11l_dataout = ((~ nllili) === 1'b1) ? ni0Ol : nl0iOl;
	assign		wire_ni11O_dataout = ((~ nllili) === 1'b1) ? ni0OO : nl0iOO;
	assign		wire_ni1ii_dataout = ((~ nllili) === 1'b1) ? nii0i : nl0l0i;
	assign		wire_ni1il_dataout = ((~ nllili) === 1'b1) ? nii0l : nl0l0l;
	assign		wire_ni1iO_dataout = ((~ nllili) === 1'b1) ? nii0O : nl0l0O;
	assign		wire_ni1li_dataout = ((~ nllili) === 1'b1) ? niiii : nl0lii;
	assign		wire_ni1ll_dataout = ((~ nllili) === 1'b1) ? niiil : nl0lil;
	assign		wire_ni1lO_dataout = ((~ nllili) === 1'b1) ? niiiO : nl0liO;
	assign		wire_ni1Oi_dataout = ((~ nllili) === 1'b1) ? niili : nl0lli;
	assign		wire_ni1Ol_dataout = ((~ nllili) === 1'b1) ? niill : nl0lll;
	assign		wire_ni1OO_dataout = ((~ nllili) === 1'b1) ? niilO : nl0llO;
	assign		wire_niO_dataout = (n1O === 1'b1) ? wire_nll_o[0] : wire_nli_o[2];
	or(wire_nl_dataout, ni, nil);
	oper_add   n000O
	( 
	.a({{2{wire_n0l1i_o[9]}}, wire_n0l1i_o[9:0], wire_n0iOO_dataout, wire_n0iOl_dataout, wire_n0iOi_dataout, wire_n0ilO_dataout, wire_n0ill_dataout, wire_n0ili_dataout, wire_n0iiO_dataout, wire_n0iil_dataout, wire_n0iii_dataout, wire_n0i0O_dataout, wire_n0i0l_dataout, wire_n0i0i_dataout, wire_n0i1O_dataout, wire_n0i1l_dataout, wire_n0i1i_dataout, wire_n00OO_dataout, wire_n00Ol_dataout, wire_n00Oi_dataout, wire_n00lO_dataout, wire_n00ll_dataout, wire_n00li_dataout, wire_n00iO_dataout, wire_n00il_dataout, wire_n00ii_dataout}),
	.b({{11{1'b0}}, wire_ni00l_dataout, {23{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n000O_o));
	defparam
		n000O.sgate_representation = 0,
		n000O.width_a = 36,
		n000O.width_b = 36,
		n000O.width_o = 36;
	oper_add   n001l
	( 
	.a({{2{wire_n000O_o[34]}}, wire_n000O_o[34:24], 1'b1}),
	.b({{5{1'b1}}, {8{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n001l_o));
	defparam
		n001l.sgate_representation = 0,
		n001l.width_a = 14,
		n001l.width_b = 14,
		n001l.width_o = 14;
	oper_add   n010O
	( 
	.a({{3{(~ wire_n000O_o[34])}}, (~ wire_n000O_o[33]), (~ wire_n000O_o[32]), (~ wire_n000O_o[31]), (~ wire_n000O_o[30]), (~ wire_n000O_o[29]), (~ wire_n000O_o[28]), (~ wire_n000O_o[27]), (~ wire_n000O_o[26]), (~ wire_n000O_o[25]), (~ wire_n000O_o[24]), 1'b1}),
	.b({{13{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n010O_o));
	defparam
		n010O.sgate_representation = 0,
		n010O.width_a = 14,
		n010O.width_b = 14,
		n010O.width_o = 14;
	oper_add   n0l1i
	( 
	.a({{3{nlll0l}}, nlll0i, nlll1O, nlll1l, nlll1i, nlliOO, nlliOl, nlliOi, nllilO}),
	.b({{4{1'b0}}, {6{1'b1}}, 1'b0}),
	.cin(1'b0),
	.cout(),
	.o(wire_n0l1i_o));
	defparam
		n0l1i.sgate_representation = 0,
		n0l1i.width_a = 11,
		n0l1i.width_b = 11,
		n0l1i.width_o = 11;
	oper_add   n0lOl
	( 
	.a({1'b0, a[30:23], 1'b1}),
	.b({1'b1, (~ b[30]), (~ b[29]), (~ b[28]), (~ b[27]), (~ b[26]), (~ b[25]), (~ b[24]), (~ b[23]), 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n0lOl_o));
	defparam
		n0lOl.sgate_representation = 0,
		n0lOl.width_a = 10,
		n0lOl.width_b = 10,
		n0lOl.width_o = 10;
	oper_add   n0O0O
	( 
	.a({n0O1O, n0O1l, n0lOO}),
	.b({{2{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n0O0O_o));
	defparam
		n0O0O.sgate_representation = 0,
		n0O0O.width_a = 3,
		n0O0O.width_b = 3,
		n0O0O.width_o = 3;
	oper_add   n0Oii
	( 
	.a({n0O1O}),
	.b({1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n0Oii_o));
	defparam
		n0Oii.sgate_representation = 0,
		n0Oii.width_a = 1,
		n0Oii.width_b = 1,
		n0Oii.width_o = 1;
	oper_add   n1li
	( 
	.a({{2{1'b1}}, wire_nlilOl_q_a[19:0]}),
	.b({{11{n0il}}, n0ii, n00O, n00l, n00i, n01O, n01l, n01i, n1OO, n1Ol, n1Oi, n1lO}),
	.cin(1'b0),
	.cout(),
	.o(wire_n1li_o));
	defparam
		n1li.sgate_representation = 0,
		n1li.width_a = 22,
		n1li.width_b = 22,
		n1li.width_o = 22;
	oper_add   nl0iO
	( 
	.a({wire_nlli1i_q_a[10], wire_nlli1i_q_a[10:0], wire_nlli1l_q_a[19:0]}),
	.b({{11{nll1i}}, nliOO, nliOl, nliOi, nlilO, nlill, nlili, nliiO, nliil, nliii, nli0O, nli0l, nli0i, nli1O, nli1l, nli1i, nl0OO, nl0Ol, nl0Oi, nl0lO, nl0ll, nl0li}),
	.cin(1'b0),
	.cout(),
	.o(wire_nl0iO_o));
	defparam
		nl0iO.sgate_representation = 0,
		nl0iO.width_a = 32,
		nl0iO.width_b = 32,
		nl0iO.width_o = 32;
	oper_add   nli
	( 
	.a({nii, n0O, n0i}),
	.b({{2{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nli_o));
	defparam
		nli.sgate_representation = 0,
		nli.width_a = 3,
		nli.width_b = 3,
		nli.width_o = 3;
	oper_add   nll
	( 
	.a({nii}),
	.b({1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nll_o));
	defparam
		nll.sgate_representation = 0,
		nll.width_a = 1,
		nll.width_b = 1,
		nll.width_o = 1;
	oper_mult   n1iO
	( 
	.a({1'b0, n1il, n1ii, n10O, n10l, n10i, n11O, n11l, n11i, nlOOO, nlOOl, nlOOi, nlOlO, nlOll, nlOli}),
	.b({nlOiO, nlOil, nlOii, nlO0O, nlO0l, nlO0i, nlO1O, nlO1l, nlO1i, nllOO, nllOl, nllOi, nlllO, nllll, nllli, nlliO, nllil, nllii, nll0O, nll0l, nll0i, nll1O, nll1l}),
	.o(wire_n1iO_o));
	defparam
		n1iO.sgate_representation = 1,
		n1iO.width_a = 15,
		n1iO.width_b = 23,
		n1iO.width_o = 37;
	oper_mult   nl0i
	( 
	.a({1'b0, nl1l, nl1i, niOO, niOl, niOi, nilO, nill, nili, niiO, niil, niii, ni0O}),
	.b({ni0l, ni0i, ni1O, ni1l, ni1i, n0OO, n0Ol, n0Oi, n0lO, n0ll, n0li, n0iO}),
	.o(wire_nl0i_o));
	defparam
		nl0i.sgate_representation = 1,
		nl0i.width_a = 13,
		nl0i.width_b = 12,
		nl0i.width_o = 24;
	oper_mult   nl0il
	( 
	.a({nl0ii, nl00O, nl00l, nl00i, nl01O, nl01l, nl01i, nl1OO, nl1Ol, nl1Oi, nl1lO, nl1ll, nl1li, nl1iO, nl1il, nl1ii, nl10O, nl10l, nl10i, nl11O, nl11l, nl11i, niOOO, niOOl, niOOi, niOlO}),
	.b({niOll, niOli, niOiO, niOil, niOii, niO0O, niO0l, niO0i, niO1O, niO1l, niO1i, nilOO, nilOl, nilOi, nillO, nilll, nilli, niliO, nilil, nilii, nil0O, nil0l, nil0i, nil1O}),
	.o(wire_nl0il_o));
	defparam
		nl0il.sgate_representation = 0,
		nl0il.width_a = 26,
		nl0il.width_b = 24,
		nl0il.width_o = 50;
	oper_mux   n1ill
	( 
	.data({1'b1, 1'b0, nlllOl, 1'b0}),
	.o(wire_n1ill_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1ill.width_data = 4,
		n1ill.width_sel = 2;
	oper_mux   n1ilO
	( 
	.data({{2{1'b0}}, nlllOO, 1'b0}),
	.o(wire_n1ilO_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1ilO.width_data = 4,
		n1ilO.width_sel = 2;
	oper_mux   n1iOi
	( 
	.data({{2{1'b0}}, nllO1i, 1'b0}),
	.o(wire_n1iOi_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1iOi.width_data = 4,
		n1iOi.width_sel = 2;
	oper_mux   n1iOl
	( 
	.data({{2{1'b0}}, nllO1l, 1'b0}),
	.o(wire_n1iOl_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1iOl.width_data = 4,
		n1iOl.width_sel = 2;
	oper_mux   n1iOO
	( 
	.data({{2{1'b0}}, nllO1O, 1'b0}),
	.o(wire_n1iOO_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1iOO.width_data = 4,
		n1iOO.width_sel = 2;
	oper_mux   n1l0i
	( 
	.data({{2{1'b0}}, nllOii, 1'b0}),
	.o(wire_n1l0i_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1l0i.width_data = 4,
		n1l0i.width_sel = 2;
	oper_mux   n1l0l
	( 
	.data({{2{1'b0}}, nllOil, 1'b0}),
	.o(wire_n1l0l_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1l0l.width_data = 4,
		n1l0l.width_sel = 2;
	oper_mux   n1l0O
	( 
	.data({{2{1'b0}}, nllOiO, 1'b0}),
	.o(wire_n1l0O_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1l0O.width_data = 4,
		n1l0O.width_sel = 2;
	oper_mux   n1l1i
	( 
	.data({{2{1'b0}}, nllO0i, 1'b0}),
	.o(wire_n1l1i_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1l1i.width_data = 4,
		n1l1i.width_sel = 2;
	oper_mux   n1l1l
	( 
	.data({{2{1'b0}}, nllO0l, 1'b0}),
	.o(wire_n1l1l_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1l1l.width_data = 4,
		n1l1l.width_sel = 2;
	oper_mux   n1l1O
	( 
	.data({{2{1'b0}}, nllO0O, 1'b0}),
	.o(wire_n1l1O_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1l1O.width_data = 4,
		n1l1O.width_sel = 2;
	oper_mux   n1lii
	( 
	.data({{2{1'b0}}, nllOli, 1'b0}),
	.o(wire_n1lii_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1lii.width_data = 4,
		n1lii.width_sel = 2;
	oper_mux   n1lil
	( 
	.data({{2{1'b0}}, nllOll, 1'b0}),
	.o(wire_n1lil_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1lil.width_data = 4,
		n1lil.width_sel = 2;
	oper_mux   n1liO
	( 
	.data({{2{1'b0}}, nllOlO, 1'b0}),
	.o(wire_n1liO_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1liO.width_data = 4,
		n1liO.width_sel = 2;
	oper_mux   n1lli
	( 
	.data({{2{1'b0}}, nllOOi, 1'b0}),
	.o(wire_n1lli_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1lli.width_data = 4,
		n1lli.width_sel = 2;
	oper_mux   n1lll
	( 
	.data({{2{1'b0}}, nllOOl, 1'b0}),
	.o(wire_n1lll_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1lll.width_data = 4,
		n1lll.width_sel = 2;
	oper_mux   n1llO
	( 
	.data({{2{1'b0}}, nllOOO, 1'b0}),
	.o(wire_n1llO_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1llO.width_data = 4,
		n1llO.width_sel = 2;
	oper_mux   n1lOi
	( 
	.data({{2{1'b0}}, nlO11i, 1'b0}),
	.o(wire_n1lOi_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1lOi.width_data = 4,
		n1lOi.width_sel = 2;
	oper_mux   n1lOl
	( 
	.data({{2{1'b0}}, nlO11l, 1'b0}),
	.o(wire_n1lOl_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1lOl.width_data = 4,
		n1lOl.width_sel = 2;
	oper_mux   n1lOO
	( 
	.data({{2{1'b0}}, nlO11O, 1'b0}),
	.o(wire_n1lOO_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1lOO.width_data = 4,
		n1lOO.width_sel = 2;
	oper_mux   n1O0i
	( 
	.data({{2{1'b1}}, nlll0O, 1'b0}),
	.o(wire_n1O0i_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1O0i.width_data = 4,
		n1O0i.width_sel = 2;
	oper_mux   n1O0l
	( 
	.data({{2{1'b1}}, nlllii, 1'b0}),
	.o(wire_n1O0l_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1O0l.width_data = 4,
		n1O0l.width_sel = 2;
	oper_mux   n1O0O
	( 
	.data({{2{1'b1}}, nlllil, 1'b0}),
	.o(wire_n1O0O_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1O0O.width_data = 4,
		n1O0O.width_sel = 2;
	oper_mux   n1O1i
	( 
	.data({{2{1'b0}}, nlO10i, 1'b0}),
	.o(wire_n1O1i_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1O1i.width_data = 4,
		n1O1i.width_sel = 2;
	oper_mux   n1O1l
	( 
	.data({{2{1'b0}}, nlO10l, 1'b0}),
	.o(wire_n1O1l_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1O1l.width_data = 4,
		n1O1l.width_sel = 2;
	oper_mux   n1O1O
	( 
	.data({{2{1'b0}}, nlO10O, 1'b0}),
	.o(wire_n1O1O_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1O1O.width_data = 4,
		n1O1O.width_sel = 2;
	oper_mux   n1Oii
	( 
	.data({{2{1'b1}}, nllliO, 1'b0}),
	.o(wire_n1Oii_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1Oii.width_data = 4,
		n1Oii.width_sel = 2;
	oper_mux   n1Oil
	( 
	.data({{2{1'b1}}, nlllli, 1'b0}),
	.o(wire_n1Oil_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1Oil.width_data = 4,
		n1Oil.width_sel = 2;
	oper_mux   n1OiO
	( 
	.data({{2{1'b1}}, nlllll, 1'b0}),
	.o(wire_n1OiO_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1OiO.width_data = 4,
		n1OiO.width_sel = 2;
	oper_mux   n1Oli
	( 
	.data({{2{1'b1}}, nllllO, 1'b0}),
	.o(wire_n1Oli_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1Oli.width_data = 4,
		n1Oli.width_sel = 2;
	oper_mux   n1Oll
	( 
	.data({{2{1'b1}}, nlllOi, 1'b0}),
	.o(wire_n1Oll_o),
	.sel({wire_n1OOi_o, wire_n1OlO_o}));
	defparam
		n1Oll.width_data = 4,
		n1Oll.width_sel = 2;
	oper_mux   n1OlO
	( 
	.data({{3{1'b0}}, 1'b1}),
	.o(wire_n1OlO_o),
	.sel({nl1l1l, nl1l1i}));
	defparam
		n1OlO.width_data = 4,
		n1OlO.width_sel = 2;
	oper_mux   n1OOi
	( 
	.data({{3{1'b0}}, 1'b1, 1'b0, 1'b1, {2{1'b0}}}),
	.o(wire_n1OOi_o),
	.sel({nl1l0l, nl1l1l, nl1l1i}));
	defparam
		n1OOi.width_data = 8,
		n1OOi.width_sel = 3;
	assign
		nl1iiO = (((((((((((((((((((((((~ b[0]) & (~ b[1])) & (~ b[2])) & (~ b[3])) & (~ b[4])) & (~ b[5])) & (~ b[6])) & (~ b[7])) & (~ b[8])) & (~ b[9])) & (~ b[10])) & (~ b[11])) & (~ b[12])) & (~ b[13])) & (~ b[14])) & (~ b[15])) & (~ b[16])) & (~ b[17])) & (~ b[18])) & (~ b[19])) & (~ b[20])) & (~ b[21])) & (~ b[22])),
		nl1ili = ((((((((~ a[23]) & (~ a[24])) & (~ a[25])) & (~ a[26])) & (~ a[27])) & (~ a[28])) & (~ a[29])) & (~ a[30])),
		nl1ill = ((((((((~ b[23]) & (~ b[24])) & (~ b[25])) & (~ b[26])) & (~ b[27])) & (~ b[28])) & (~ b[29])) & (~ b[30])),
		nl1ilO = (((((((a[23] & a[24]) & a[25]) & a[26]) & a[27]) & a[28]) & a[29]) & a[30]),
		nl1iOi = (((((((((((((((((((((((~ wire_nl1OOl_q_b[0]) & (~ wire_nl1OOl_q_b[1])) & (~ wire_nl1OOl_q_b[2])) & (~ wire_nl1OOl_q_b[3])) & (~ wire_nl1OOl_q_b[4])) & (~ wire_nl1OOl_q_b[5])) & (~ wire_nl1OOl_q_b[6])) & (~ wire_nl1OOl_q_b[7])) & (~ wire_nl1OOl_q_b[8])) & (~ wire_nl1OOl_q_b[9])) & (~ wire_nl1OOl_q_b[10])) & (~ wire_nl1OOl_q_b[11])) & (~ wire_nl1OOl_q_b[12])) & (~ wire_nl1OOl_q_b[13])) & (~ wire_nl1OOl_q_b[14])) & (~ wire_nl1OOl_q_b[15])) & (~ wire_nl1OOl_q_b[16])) & (~ wire_nl1OOl_q_b[17])) & (~ wire_nl1OOl_q_b[18])) & (~ wire_nl1OOl_q_b[19])) & (~ wire_nl1OOl_q_b[20])) & (~ wire_nl1OOl_q_b[21])) & (~ wire_nl1OOl_q_b[22])),
		nl1iOl = (((((((b[23] & b[24]) & b[25]) & b[26]) & b[27]) & b[28]) & b[29]) & b[30]),
		nl1iOO = (((((((((((((((((((((((~ b[0]) & (~ b[1])) & (~ b[2])) & (~ b[3])) & (~ b[4])) & (~ b[5])) & (~ b[6])) & (~ b[7])) & (~ b[8])) & (~ b[9])) & (~ b[10])) & (~ b[11])) & (~ b[12])) & (~ b[13])) & (~ b[14])) & (~ b[15])) & (~ b[16])) & (~ b[17])) & (~ b[18])) & (~ b[19])) & (~ b[20])) & (~ b[21])) & (~ b[22])),
		nl1l0i = ((~ nl1O0O) & (~ nl01Oi)),
		nl1l0l = ((nl1lil & nl1l0O) | (((~ nl1llO) & nl1O0O) | (((~ nl011i) & nl010i) | (nl01Oi & nl00ii)))),
		nl1l0O = (nl011i & nl010i),
		nl1l1i = ((nl1lil & (nl1l1O | nl00ii)) | ((nl1l0i & (nl1l1O & (~ n010i))) | (nl1l0i & nl00ii))),
		nl1l1l = ((nl1l0O & nl1l0i) | ((nl1l0O & nl01Oi) | (((nl1l0i & nl1l1O) & (~ n010l)) | (nl1l1O & nl01Oi)))),
		nl1l1O = ((~ nl010i) & (~ nl00ii)),
		nl1lii = 1'b1,
		nl1lil = (nl1llO & nl1O0O),
		q = {((~ nl1l0l) & nl0i1i), wire_n1Oll_o, wire_n1Oli_o, wire_n1OiO_o, wire_n1Oil_o, wire_n1Oii_o, wire_n1O0O_o, wire_n1O0l_o, wire_n1O0i_o, wire_n1O1O_o, wire_n1O1l_o, wire_n1O1i_o, wire_n1lOO_o, wire_n1lOl_o, wire_n1lOi_o, wire_n1llO_o, wire_n1lll_o, wire_n1lli_o, wire_n1liO_o, wire_n1lil_o, wire_n1lii_o, wire_n1l0O_o, wire_n1l0l_o, wire_n1l0i_o, wire_n1l1O_o, wire_n1l1l_o, wire_n1l1i_o, wire_n1iOO_o, wire_n1iOl_o, wire_n1iOi_o, wire_n1ilO_o, wire_n1ill_o};
endmodule //div_s
//synopsys translate_on
//VALID FILE
